# Used by Docker Compose: https://docs.docker.com/compose/env-file/

# The name the app will be saved under in Docker compose
COMPOSE_PROJECT_NAME=radixdlt-network-gateway__toy-deployment

# Wait up to this many ms for PostGres to boot up
MAX_DB_WAIT_MS_ON_START=30000

# Defines if certificate checks should be skipped against the Core API (eg if your Core API is exposed via nginx using self-signed certificates)
DISABLE_CORE_API_CERTIFICATE_CHECKS=false

# Defines if your Gateway APIs should boot up with swagger, to allow an easy overview of the API (shouldn't be enabled in production)
ENABLE_SWAGGER=true

# The logical network name which the nodes you connect to must match with
# EG mainnet | stokenet | localnet
NETWORK_NAME=stokenet

POSTGRES_SUPERUSER=db_superuser
POSTGRES_SUPERUSER_PASSWORD=db_password
POSTGRES_DB_NAME=radixdlt_ledger

# Define the Full Node Core APIs to connect to below
# Note that host.docker.internal translates to the host machine's localhost from a docker container when run in Docker Desktop on Mac or Windows
# See - https://www.cloudsavvyit.com/14114/how-to-connect-to-localhost-within-a-docker-container/

NODE_0_NAME=One
NODE_0_CORE_API_ADDRESS=http://host.docker.internal:3333
NODE_0_CORE_API_AUTHORIZATION_HEADER=
NODE_0_ENABLED=true

NODE_1_NAME=Two
NODE_1_CORE_API_ADDRESS=http://host.docker.internal:3334
NODE_1_CORE_API_AUTHORIZATION_HEADER=
NODE_1_ENABLED=false

NODE_2_NAME=Three
NODE_2_CORE_API_ADDRESS=http://host.docker.internal:3335
NODE_2_CORE_API_AUTHORIZATION_HEADER=
NODE_2_ENABLED=false

NODE_3_NAME=Four
NODE_3_CORE_API_ADDRESS=http://host.docker.internal:3336
NODE_3_CORE_API_AUTHORIZATION_HEADER=
NODE_3_ENABLED=false

NODE_4_NAME=Five
NODE_4_CORE_API_ADDRESS=http://host.docker.internal:3337
NODE_4_CORE_API_AUTHORIZATION_HEADER=
NODE_4_ENABLED=false
