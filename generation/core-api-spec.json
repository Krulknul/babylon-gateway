{
    "openapi": "3.0.0",
    "info": {
        "version": "0.9.0",
        "title": "Radix Core API",
        "description": "This API provides endpoints for both RadixCore node management and support\nfor middleware integration (such as exchanges).\n\n# Introduction\n\nWelcome to the Radix Core API Preview. This Preview API is intended for\nexchanges to be able to begin integrating with the Radix network. In particular,\nthe following endpoints will be frozen or at the very least backwards\ncompatible to version 1.0.0 of the Radix Core API:\n* `/network/configuration`\n* `/network/status`\n* `/transactions`\n* `/construction/build`\n* `/construction/parse`\n* `/construction/finalize`\n* `/construction/submit`\n\nAll other endpoints may change upon 1.0.0 release.\n\n:::warning\n\nThis API is NOT intended to be available on the public web and is designed\nto be used in private networks mainly for node management and integration.\nIn particular, endpoints in the Signing API if accessed by the public can\nresult in loss of funds.\n\n:::\n\n# Rosetta\n\nMuch of the design decisions of the Data API and Construction API endpoints is\ninspired from [Rosetta API](https://www.rosetta-api.org/) most notably:\n  * Use of a JSON-Based RPC protocol on top of HTTP Post requests\n  * Use of Operations, Amounts, and Identifiers to express generic asset movement\n\nThere are a few notable exceptions to note:\n  * Fetching of ledger data is through a Transaction stream rather than a\n  Block stream\n  * Use of `AddressIdentifier` rather than `AccountIdentifier`\n  * Use of `OperationGroup` rather than `related_operations` to express related\n  operations\n  * Even though the Radix Ledger is UTXO based Construction endpoints does coin\n  selection on behalf of the caller. This has the unfortunate effect of not\n  being able to support high frequency transactions from a single address due to\n  UTXO spend conflicts. This will be addressed in future updates.\n  * Construction endpoints are mostly online rather than offline as required by\n  Rosetta\n\nFuture versions of the api will aim towards a fully-compliant Rosetta API.\n\n# Data API Overview\n\nClients can make use of the Data API endpoints in order to synchronize\neither a full or partial view (for example, only track XRD asset balances) of\nwhat's occuring on ledger transaction by transaction.\n\n## Sequence Flow\n\nSynchronization involves only using the Data API. Assuming the client has a\ndatabase which they are updating, below is a generic flow of operations on\nhow to synchronize via the Data API.\n\n![Data Sequence Flow](https://raw.githubusercontent.com/radixdlt/radixdlt/feature/open-api/radixdlt-core/radixdlt/src/main/java/com/radixdlt/api/core/documentation/data_sequence_flow.png)\n\n## State Identifier\n\nThe Radix Olympia network has no concept of blocks, instead transactions are\nmanaged in a flat ordered list. A hash chain is formed from these transactions\nwhich represents a point in time of the ledger with a valid committed state.\n\n![State Identifiers](https://raw.githubusercontent.com/radixdlt/radixdlt/feature/open-api/radixdlt-core/radixdlt/src/main/java/com/radixdlt/api/core/documentation/state_identifiers.png '#width=500px;')\n\nAlong with the transaction accumulator hash and the index of the hash in the hash\nchain, this forms a State Identifier:\n<SchemaDefinition schemaRef=\"#/components/schemas/CommittedStateIdentifier\" exampleRef=\"#/components/examples/CommittedStateIdentifier\" showReadOnly={true} showWriteOnly={true} />\n\n# Construction API Overview\n\nClients can make use of the Construction API endpoints to construct and submit\ntransactions to the network.\n\n## Sequence Flow\n\nThe following sequence flow allows for integrators to construct transactions\non behalf of clients or for their own use without ever holding the actual private\nkey.\n\nUnlike the Rosetta Construction API [specification](https://www.rosetta-api.org/docs/construction_api_introduction.html),\nthis Construction API selects the UTXOs on behalf of the caller. This has the unfortunate\nside effect of not being able to support high frequency transactions from a single\naddress due to UTXO conflicts. This will be addressed in a future release.\n\n![Construction Sequence Flow](https://raw.githubusercontent.com/radixdlt/radixdlt/feature/open-api/radixdlt-core/radixdlt/src/main/java/com/radixdlt/api/core/documentation/construction_sequence_flow.png)\n\n\n## Operation Construction Details\n\nThe Radix Olympia network currently has six actions a non-validator may enact:\n1. Transfer Tokens\n2. Stake XRD to a Validator\n3. Unstake XRD from a Validator\n4. Create a new Token Definition\n5. Mint Tokens\n6. Burn Tokens\n\nAnd five actions which are reserved for validators:\n1. Set Validator Owner\n2. Set Validator Registration\n3. Set Validator Fee\n4. Set Validator Metadata\n5. Set Validator AllowDelegation Flag\n\n# Transaction Operations\n\nSimilar to the [Rosetta API](https://www.rosetta-api.org/), both reading and\nwriting to the ledger use the same Address and Operation objects.\n\nEvery state change is expressed as an Operation which operates on a single\nAddressIdentifier. Any state change which consists of two addresses (such as\na token transfer) thus requires atleast two Operations, one which debits\nthe sender and one which credits the receiver.\n\nEach Operation is also associated with a single Amount update and/or a single Data\nupdate.\n\nThese operations are then grouped into OperationGroups which represent a well formed\naccounting entry where credits and debits are equivalent (unless minting or burning).\n\nA Transaction then consists of one or more OperationGroups.\n\n![Transaction Operations](https://raw.githubusercontent.com/radixdlt/radixdlt/feature/open-api/radixdlt-core/radixdlt/src/main/java/com/radixdlt/api/core/documentation/transaction_operations.png '#width=500px;')\n\n## Address Identifier\n\n<SchemaDefinition schemaRef=\"#/components/schemas/AddressIdentifier\" showReadOnly={true} showWriteOnly={true} />\n\n## Amount\n\n<SchemaDefinition schemaRef=\"#/components/schemas/ResourceAmount\" showReadOnly={true} showWriteOnly={true} />\n\n## Resource Identifier\n\n<SchemaDefinition schemaRef=\"#/components/schemas/ResourceIdentifier\" showReadOnly={true} showWriteOnly={true} />\n",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "servers": [
        {
            "url": "localhost:3333"
        }
    ],
    "tags": [
        {
            "name": "network",
            "x-displayName": "Network",
            "description": "Get info about the node and network"
        },
        {
            "name": "address",
            "x-displayName": "Address",
            "description": "Get info about an address"
        },
        {
            "name": "transactions",
            "x-displayName": "Transactions",
            "description": "Get stream of committed transactions"
        },
        {
            "name": "construction",
            "x-displayName": "Construction",
            "description": "Construct a transaction for submission"
        },
        {
            "name": "sign",
            "x-displayName": "Sign Transaction",
            "description": "Sign a Transaction with the node's private key"
        }
    ],
    "x-tagGroups": [
        {
            "name": "Data API",
            "tags": [
                "network",
                "address",
                "transactions"
            ]
        },
        {
            "name": "Construction API",
            "tags": [
                "construction"
            ]
        },
        {
            "name": "Signing API",
            "tags": [
                "sign"
            ]
        }
    ],
    "paths": {
        "/network/configuration": {
            "post": {
                "summary": "Get Network Configuration",
                "description": "Returns the network configuration of the network the node is connected to.",
                "tags": [
                    "network"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkConfigurationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Network Configuration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkConfigurationResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnexpectedError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/network/status": {
            "post": {
                "summary": "Get Network Status",
                "description": "Returns the current state and status of the ledger.",
                "tags": [
                    "network"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NetworkStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Network Status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkStatusResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An Unexpected Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnexpectedError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/address": {
            "post": {
                "summary": "Get Address Info",
                "tags": [
                    "address"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address Balances and Data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnexpectedError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions": {
            "post": {
                "summary": "Get Committed Transactions",
                "description": "Returns an ordered sublist of committed transactions. This endpoint is designed for lite clients to sync with the state of the ledger.",
                "tags": [
                    "transactions"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommittedTransactionsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sublist of Committed Transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommittedTransactionsResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An Unexpected Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnexpectedError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/construction/build": {
            "post": {
                "summary": "Build Transaction",
                "tags": [
                    "construction"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConstructionBuildRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An unsigned transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstructionBuildResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnexpectedError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/construction/parse": {
            "post": {
                "summary": "Parse Transaction",
                "tags": [
                    "construction"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConstructionParseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An unsigned transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstructionParseResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnexpectedError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/construction/finalize": {
            "post": {
                "summary": "Finalize Transaction",
                "tags": [
                    "construction"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConstructionFinalizeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An unsigned transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstructionFinalizeResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnexpectedError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/construction/submit": {
            "post": {
                "summary": "Submit Transaction",
                "tags": [
                    "construction"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConstructionSubmitRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An unsigned transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConstructionSubmitResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnexpectedError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sign": {
            "post": {
                "summary": "Sign Transaction",
                "tags": [
                    "sign"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Signed Transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnexpectedError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "NetworkConfigurationRequest": {
                "type": "object",
                "example": {}
            },
            "NetworkConfigurationResponse": {
                "type": "object",
                "required": [
                    "version",
                    "network_identifier",
                    "bech32_human_readable_parts"
                ],
                "properties": {
                    "version": {
                        "description": "Different versions regarding the node, network and api",
                        "type": "object",
                        "required": [
                            "core_version",
                            "api_version"
                        ],
                        "properties": {
                            "core_version": {
                                "type": "string"
                            },
                            "api_version": {
                                "type": "string"
                            }
                        }
                    },
                    "network_identifier": {
                        "description": "Id and name of network",
                        "$ref": "#/components/schemas/NetworkIdentifier"
                    },
                    "bech32_human_readable_parts": {
                        "description": "The unique bech32 hrps used for addressing",
                        "$ref": "#/components/schemas/Bech32HRPs"
                    }
                },
                "example": {
                    "network_identifier": {
                        "id": 1,
                        "name": "mainnet"
                    },
                    "bech32_human_readable_parts": {
                        "account_hrp": "rdx",
                        "validator_hrp": "rv",
                        "node_hrp": "rn",
                        "resource_hrp_suffix": "_rr"
                    }
                }
            },
            "NetworkStatusRequest": {
                "type": "object",
                "example": {}
            },
            "NetworkStatusResponse": {
                "type": "object",
                "required": [
                    "pre_genesis_state_identifier",
                    "genesis_state_identifier",
                    "current_state_identifier",
                    "current_state_epoch",
                    "current_state_round",
                    "current_state_timestamp",
                    "node_identifiers"
                ],
                "properties": {
                    "pre_genesis_state_identifier": {
                        "description": "The ledger state identifier before the genesis transaction",
                        "$ref": "#/components/schemas/CommittedStateIdentifier"
                    },
                    "genesis_state_identifier": {
                        "description": "The ledger state identifier after the genesis transaction",
                        "$ref": "#/components/schemas/CommittedStateIdentifier"
                    },
                    "current_state_identifier": {
                        "description": "The current ledger state identifier",
                        "$ref": "#/components/schemas/CommittedStateIdentifier"
                    },
                    "current_state_epoch": {
                        "description": "The current ledger state epoch",
                        "$ref": "#/components/schemas/LongNumber"
                    },
                    "current_state_round": {
                        "description": "The current ledger state round",
                        "$ref": "#/components/schemas/LongNumber"
                    },
                    "current_state_timestamp": {
                        "description": "The current ledger state timestamp, not guaranteed to always increase",
                        "$ref": "#/components/schemas/LongNumber"
                    },
                    "node_identifiers": {
                        "description": "The address identifiers associated with this node's private key",
                        "type": "object",
                        "required": [
                            "account_address_identifier",
                            "validator_address_identifier",
                            "public_key"
                        ],
                        "properties": {
                            "account_address_identifier": {
                                "$ref": "#/components/schemas/AddressIdentifier"
                            },
                            "validator_address_identifier": {
                                "$ref": "#/components/schemas/AddressIdentifier"
                            },
                            "public_key": {
                                "$ref": "#/components/schemas/PublicKey"
                            }
                        }
                    }
                },
                "example": {
                    "pre_genesis_state_identifier": {
                        "state_version": 0,
                        "transaction_accumulator": "0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    "current_state_timestamp": 1627452363772,
                    "current_state_identifier": {
                        "state_version": 322001,
                        "transaction_accumulator": "e31f8314a67236076ad6d46391e93a93d7b9d34de2062acc620541c09dd69f95"
                    },
                    "current_state_epoch": 1,
                    "current_state_view": 321991,
                    "genesis_state_identifier": {
                        "state_version": 1,
                        "transaction_accumulator": "1e62415e5fd95c63aff69142f1359cc6a981ff7169c128d266f45adf614d09b0"
                    },
                    "node_identifiers": {
                        "account_address_identifier": {
                            "address": "rdx1qspmwn5n0qyz685f20aevh4wglxxzg9k5t5vql20s4jqa7kj8hz0njclnh0mf"
                        },
                        "validator_address_identifier": {
                            "address": "rv1qwm5aymcpqk3az2nlwt9atj8e3sjpd4zarq86nu9vs80453acnuuklp5yl2"
                        }
                    }
                }
            },
            "SignRequest": {
                "type": "object",
                "required": [
                    "public_key",
                    "unsigned_transaction"
                ],
                "properties": {
                    "public_key": {
                        "description": "The public key which represents the private key to sign with",
                        "$ref": "#/components/schemas/PublicKey"
                    },
                    "unsigned_transaction": {
                        "description": "Hex encoded unsigned transaction to sign",
                        "type": "string"
                    }
                }
            },
            "SignResponse": {
                "type": "object",
                "required": [
                    "signed_transaction"
                ],
                "properties": {
                    "signed_transaction": {
                        "type": "string"
                    }
                }
            },
            "AddressRequest": {
                "type": "object",
                "required": [
                    "address_identifier"
                ],
                "properties": {
                    "address_identifier": {
                        "description": "Address to get balance of",
                        "$ref": "#/components/schemas/AddressIdentifier"
                    }
                },
                "example": {
                    "address_identifier": {
                        "address": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88"
                    }
                }
            },
            "AddressResponse": {
                "type": "object",
                "required": [
                    "balances",
                    "data_objects"
                ],
                "properties": {
                    "balances": {
                        "description": "Balances associated with the address",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceAmount"
                        }
                    },
                    "data_objects": {
                        "description": "Data associated with the address",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DataObject"
                        }
                    }
                },
                "example": {
                    "balances": [
                        {
                            "resource_identifier": {
                                "rri": "xrd_rr1qy5wfsfh",
                                "type": "token"
                            },
                            "value": "13443027000000000000000"
                        },
                        {
                            "resource_identifier": {
                                "rri": "veri_rr1qdtwzvy8lnfgl9t5tnj8f5fwl2znssnvx27vufcx7u3slv0gce",
                                "type": "token"
                            },
                            "value": "1000000000000000000"
                        },
                        {
                            "resource_identifier": {
                                "validator": "rv1q04u5zwtgffsqkvr08xqm6vpm3gwxh4uqwtjpx5p47ew0m0v8m5zs3m3jed",
                                "type": "stake_ownership"
                            },
                            "value": "15000000000000000000000"
                        }
                    ],
                    "data_objects": []
                }
            },
            "ConstructionBuildRequest": {
                "type": "object",
                "required": [
                    "operation_groups",
                    "fee_payer"
                ],
                "properties": {
                    "operation_groups": {
                        "description": "Operation groups which describe the intent of the request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationGroup"
                        }
                    },
                    "fee_payer": {
                        "description": "The address where fees will be subtracted from",
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "message": {
                        "description": "An optional message encoded in hex",
                        "type": "string"
                    },
                    "disable_resource_allocate_and_destroy": {
                        "description": "Disallow minting and burning of tokens (except for fees). Useful for verification of transactions without additional substate data info such as when verifying transactions in an offline environment",
                        "type": "boolean"
                    }
                },
                "example": {
                    "fee_payer": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88",
                    "operation_groups": [
                        {
                            "operations": [
                                {
                                    "type": "Resource",
                                    "address_identifier": {
                                        "address": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88"
                                    },
                                    "amount": {
                                        "resource_identifier": {
                                            "type": "Token",
                                            "rri": "xrd_rr1qy5wfsfh"
                                        },
                                        "value": "-1500"
                                    }
                                },
                                {
                                    "type": "Resource",
                                    "address_identifier": {
                                        "address": "rdx1qsp258zf47f288g4y47hm3plsp03370safcjg5x98e6j2h66p5we8ds8m7g33"
                                    },
                                    "amount": {
                                        "resource_identifier": {
                                            "type": "Token",
                                            "rri": "xrd_rr1qy5wfsfh"
                                        },
                                        "value": "1500"
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            "ConstructionBuildResponse": {
                "type": "object",
                "required": [
                    "result"
                ],
                "properties": {
                    "result": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "result",
                    "mapping": {
                        "SUCCESS": "#/components/schemas/ConstructionBuildSuccessResponse",
                        "ERROR": "#/components/schemas/ConstructionBuildErrorResponse"
                    }
                }
            },
            "ConstructionParseRequest": {
                "type": "object",
                "required": [
                    "transaction",
                    "signed"
                ],
                "properties": {
                    "transaction": {
                        "description": "Hex encoded transaction to parse",
                        "type": "string"
                    },
                    "signed": {
                        "description": "Whether the transaction is signed or not. If not signed, parsing will skip authorization checks.",
                        "type": "boolean"
                    }
                },
                "example": {
                    "transaction": "0d000107ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d9933719381184200000002010021000000000000000000000000000000000000000000000000000101ed50bab1800002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da329a6148f65d4e80000008000002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da329a6148f65d4e7f6a02004506000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000000000000000000000000009600",
                    "signed": false
                }
            },
            "ConstructionParseResponse": {
                "type": "object",
                "required": [
                    "operation_groups"
                ],
                "properties": {
                    "operation_groups": {
                        "description": "The parsed operation groups",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationGroup"
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "fee": {
                                "$ref": "#/components/schemas/BigInteger"
                            }
                        }
                    }
                }
            },
            "ConstructionFinalizeRequest": {
                "type": "object",
                "required": [
                    "unsigned_transaction",
                    "signature"
                ],
                "properties": {
                    "unsigned_transaction": {
                        "description": "Hex encoded unsigned transaction",
                        "type": "string"
                    },
                    "signature": {
                        "description": "The signature for the unsigned transaction",
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "unsigned_transaction": "0d000107ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d9933719381184200000002010021000000000000000000000000000000000000000000000000000101ed50bab1800002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da329a6148f65d4e80000008000002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da329a6148f65d4e7f6a02004506000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000000000000000000000000009600",
                    "signature": {
                        "public_key": {
                            "hex": ""
                        },
                        "bytes": ""
                    }
                }
            },
            "ConstructionFinalizeResponse": {
                "type": "object",
                "required": [
                    "signed_transaction"
                ],
                "properties": {
                    "signed_transaction": {
                        "description": "Hex encoded signed transaction which can be submitted",
                        "type": "string"
                    }
                },
                "example": {
                    "signed_transaction": "07030e7094728c8d065c5db696977696bea9094f67bcfd4c021f99ec784e24023b0000000c0100210000000000000000000000000000000000000000000000000000ffcb9e57d4000002004506000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000007c13bc4b1c16827082c00000008000002004506000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000007ad6192165e31dff02c000002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da329b63364718000000000b015584aed8375f30b22a2203b77dbe15e5dc0a3618fb45ea30ee54a6ebe0054b673a471ad2214b7bd06c4228083643b57e095787c9fb01443e1c3d6890d28f60cf"
                }
            },
            "ConstructionSubmitRequest": {
                "type": "object",
                "required": [
                    "signed_transaction"
                ],
                "properties": {
                    "signed_transaction": {
                        "description": "Hex encoded signed transaction to be submitted",
                        "type": "string"
                    }
                },
                "example": {
                    "signed_transaction": "07030e7094728c8d065c5db696977696bea9094f67bcfd4c021f99ec784e24023b0000000c0100210000000000000000000000000000000000000000000000000000ffcb9e57d4000002004506000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000007c13bc4b1c16827082c00000008000002004506000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000007ad6192165e31dff02c000002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da329b63364718000000000b015584aed8375f30b22a2203b77dbe15e5dc0a3618fb45ea30ee54a6ebe0054b673a471ad2214b7bd06c4228083643b57e095787c9fb01443e1c3d6890d28f60cf"
                }
            },
            "ConstructionSubmitResponse": {
                "type": "object",
                "required": [
                    "transaction_identifier",
                    "duplicate"
                ],
                "properties": {
                    "transaction_identifier": {
                        "description": "The unique hashed identifier of the transaction submitted",
                        "$ref": "#/components/schemas/TransactionIdentifier"
                    },
                    "duplicate": {
                        "description": "true, if the transaction is a duplicate of an existring transaction in the mempool",
                        "type": "boolean"
                    }
                },
                "example": {
                    "transaction_identifier": {
                        "hash": "ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d99337193811842"
                    },
                    "duplicate": false
                }
            },
            "ConstructionBuildSuccessResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ConstructionBuildResponse"
                    },
                    {
                        "type": "object",
                        "required": [
                            "fee",
                            "unsigned_transaction",
                            "payload_to_sign"
                        ],
                        "properties": {
                            "unsigned_transaction": {
                                "description": "Hex encoded unsigned transaction",
                                "type": "string"
                            },
                            "payload_to_sign": {
                                "description": "Hex encoded hash payload to sign",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ConstructionBuildErrorResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ConstructionBuildResponse"
                    },
                    {
                        "type": "object",
                        "required": [
                            "details"
                        ],
                        "properties": {
                            "details": {
                                "$ref": "#/components/schemas/ConstructionBuildError"
                            }
                        }
                    }
                ]
            },
            "ConstructionBuildErrorMessageTooLong": {
                "type": "object",
                "required": [
                    "limit",
                    "actual"
                ],
                "properties": {
                    "limit": {
                        "type": "integer"
                    },
                    "actual": {
                        "type": "integer"
                    }
                }
            },
            "ConstructionBuildErrorNotEnoughResources": {
                "type": "object",
                "required": [
                    "requested",
                    "available"
                ],
                "properties": {
                    "requested": {
                        "$ref": "#/components/schemas/BigInteger"
                    },
                    "available": {
                        "$ref": "#/components/schemas/BigInteger"
                    }
                }
            },
            "ConstructionBuildErrorMinimumStake": {
                "type": "object",
                "required": [
                    "requested",
                    "minimum"
                ],
                "properties": {
                    "requested": {
                        "$ref": "#/components/schemas/BigInteger"
                    },
                    "minimum": {
                        "$ref": "#/components/schemas/BigInteger"
                    }
                }
            },
            "ConstructionBuildErrorCouldNotConstructFees": {
                "type": "object",
                "required": [
                    "requested",
                    "minimum"
                ],
                "properties": {
                    "attempts": {
                        "type": "integer"
                    }
                }
            },
            "ConstructionBuildErrorAboveMaximumRakeIncrease": {
                "type": "object",
                "required": [
                    "requested",
                    "minimum"
                ],
                "properties": {
                    "limit": {
                        "$ref": "#/components/schemas/BigInteger"
                    },
                    "attempted": {
                        "$ref": "#/components/schemas/BigInteger"
                    }
                }
            },
            "ConstructionBuildErrorInvalidStakePermissions": {
                "type": "object",
                "required": [
                    "requested",
                    "minimum"
                ],
                "properties": {
                    "owner": {
                        "$ref": "#/components/schemas/AccountAddress"
                    },
                    "user": {
                        "$ref": "#/components/schemas/AccountAddress"
                    }
                }
            },
            "ConstructionBuildError": {
                "type": "object",
                "required": [
                    "errorType"
                ],
                "properties": {
                    "errorType": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "errorType",
                    "mapping": {
                        "MESSAGE_TOO_LONG": "#/components/schemas/ConstructionBuildErrorMessageTooLong",
                        "NOT_ENOUGH_RESOURCES": "#/components/schemas/ConstructionBuildErrorNotEnoughResources",
                        "BELOW_MINIMUM_STAKE": "#/components/schemas/ConstructionBuildErrorMinimumStake",
                        "COULD_NOT_CONSTRUCT_FEES": "#/components/schemas/ConstructionBuildErrorCouldNotConstructFees",
                        "ABOVE_MAXIMUM_RAKE_INCREASE": "#/components/schemas/ConstructionBuildErrorAboveMaximumRakeIncrease",
                        "INVALID_STAKE_PERMISSIONS": "#/components/schemas/ConstructionBuildErrorInvalidStakePermissions"
                    }
                }
            },
            "CommittedTransactionsRequest": {
                "description": "A request to retrieve a sublist of committed transactions to the ledger.",
                "type": "object",
                "properties": {
                    "committed_state_identifier": {
                        "description": "The state identifier point from which to begin returning transactions from",
                        "$ref": "#/components/schemas/PartialCommittedStateIdentifier"
                    },
                    "limit": {
                        "description": "The maximum number of transactions that will be returned.",
                        "$ref": "#/components/schemas/LongNumber"
                    }
                },
                "example": {
                    "committed_state_identifier": {
                        "state_version": 40897
                    },
                    "limit": 1
                }
            },
            "CommittedTransactionsResponse": {
                "description": "A response of committed transactions which specifies the state updates which have occurred on ledger.",
                "type": "object",
                "required": [
                    "committed_state_identifier",
                    "transactions"
                ],
                "properties": {
                    "committed_state_identifier": {
                        "description": "The committed ledger state identifier from which this transaction list starts from",
                        "$ref": "#/components/schemas/CommittedStateIdentifier"
                    },
                    "transactions": {
                        "description": "A committed transactions list starting from the `committed_state_identifier`",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommittedTransaction"
                        }
                    }
                },
                "example": {
                    "committed_state_identifier": {
                        "state_version": 40897,
                        "transaction_accumulator": "dd61e3e2c9cdda8bf8973ea7d6dd4e6482c569fff45f0ca5e2bfd196f5bae4c9"
                    },
                    "transactions": [
                        {
                            "metadata": {
                                "size": 360,
                                "signed_by": {
                                    "hex": "02aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b6"
                                },
                                "fee": "72000000000000000",
                                "hex": "07030e7094728c8d065c5db696977696bea9094f67bcfd4c021f99ec784e24023b0000000c0100210000000000000000000000000000000000000000000000000000ffcb9e57d4000002004506000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000007c13bc4b1c16827082c00000008000002004506000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000007ad6192165e31dff02c000002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da329b63364718000000000b015584aed8375f30b22a2203b77dbe15e5dc0a3618fb45ea30ee54a6ebe0054b673a471ad2214b7bd06c4228083643b57e095787c9fb01443e1c3d6890d28f60cf",
                                "timestamp": 1627407310726
                            },
                            "committed_state_identifier": {
                                "state_version": 40898,
                                "transaction_accumulator": "5ea573f2e31640d177047d14122f1015c262f0d14d522596068784406aa1d88f"
                            },
                            "transaction_identifier": {
                                "hash": "ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d99337193811842"
                            },
                            "operation_groups": [
                                {
                                    "metadata": {
                                        "action": {
                                            "amount": "72000000000000000",
                                            "rri": "xrd_rr1qy5wfsfh",
                                            "from": "rdx1qsp258zf47f288g4y47hm3plsp03370safcjg5x98e6j2h66p5we8ds8m7g33",
                                            "type": "BurnTokens"
                                        }
                                    },
                                    "operations": [
                                        {
                                            "amount": {
                                                "resource_identifier": {
                                                    "rri": "xrd_rr1qy5wfsfh",
                                                    "type": "Token"
                                                },
                                                "value": "-2400000000000000000000000000"
                                            },
                                            "substate": {
                                                "substate_identifier": {
                                                    "identifier": "030e7094728c8d065c5db696977696bea9094f67bcfd4c021f99ec784e24023b0000000c"
                                                },
                                                "substate_operation": "SHUTDOWN"
                                            },
                                            "address_identifier": {
                                                "address": "rdx1qsp258zf47f288g4y47hm3plsp03370safcjg5x98e6j2h66p5we8ds8m7g33"
                                            },
                                            "type": "Resource"
                                        },
                                        {
                                            "metadata": {
                                                "substate_data_hex": "06000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000007c13bc4b1c16827082c0000"
                                            },
                                            "amount": {
                                                "resource_identifier": {
                                                    "rri": "xrd_rr1qy5wfsfh",
                                                    "type": "Token"
                                                },
                                                "value": "2399999999928000000000000000"
                                            },
                                            "substate": {
                                                "substate_identifier": {
                                                    "identifier": "ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d9933719381184200000000"
                                                },
                                                "substate_operation": "BOOTUP"
                                            },
                                            "address_identifier": {
                                                "address": "rdx1qsp258zf47f288g4y47hm3plsp03370safcjg5x98e6j2h66p5we8ds8m7g33"
                                            },
                                            "type": "Resource"
                                        }
                                    ]
                                },
                                {
                                    "metadata": {
                                        "action": {
                                            "amount": "24000000000000000000000000",
                                            "rri": "xrd_rr1qy5wfsfh",
                                            "from": "rdx1qsp258zf47f288g4y47hm3plsp03370safcjg5x98e6j2h66p5we8ds8m7g33",
                                            "to": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88",
                                            "type": "TokenTransfer"
                                        }
                                    },
                                    "operations": [
                                        {
                                            "amount": {
                                                "resource_identifier": {
                                                    "rri": "xrd_rr1qy5wfsfh",
                                                    "type": "Token"
                                                },
                                                "value": "-2399999999928000000000000000"
                                            },
                                            "substate": {
                                                "substate_identifier": {
                                                    "identifier": "ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d9933719381184200000000"
                                                },
                                                "substate_operation": "SHUTDOWN"
                                            },
                                            "address_identifier": {
                                                "address": "rdx1qsp258zf47f288g4y47hm3plsp03370safcjg5x98e6j2h66p5we8ds8m7g33"
                                            },
                                            "type": "Resource"
                                        },
                                        {
                                            "metadata": {
                                                "substate_data_hex": "06000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000007ad6192165e31dff02c0000"
                                            },
                                            "amount": {
                                                "resource_identifier": {
                                                    "rri": "xrd_rr1qy5wfsfh",
                                                    "type": "Token"
                                                },
                                                "value": "2375999999928000000000000000"
                                            },
                                            "substate": {
                                                "substate_identifier": {
                                                    "identifier": "ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d9933719381184200000001"
                                                },
                                                "substate_operation": "BOOTUP"
                                            },
                                            "address_identifier": {
                                                "address": "rdx1qsp258zf47f288g4y47hm3plsp03370safcjg5x98e6j2h66p5we8ds8m7g33"
                                            },
                                            "type": "Resource"
                                        },
                                        {
                                            "metadata": {
                                                "substate_data_hex": "06000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da329b63364718000000"
                                            },
                                            "amount": {
                                                "resource_identifier": {
                                                    "rri": "xrd_rr1qy5wfsfh",
                                                    "type": "Token"
                                                },
                                                "value": "24000000000000000000000000"
                                            },
                                            "substate": {
                                                "substate_identifier": {
                                                    "identifier": "ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d9933719381184200000002"
                                                },
                                                "substate_operation": "BOOTUP"
                                            },
                                            "address_identifier": {
                                                "address": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88"
                                            },
                                            "type": "Resource"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            "CommittedTransaction": {
                "description": "A transaction which has been committed on ledger at some index.",
                "type": "object",
                "required": [
                    "transaction_identifier",
                    "committed_state_identifier",
                    "operation_groups",
                    "metadata"
                ],
                "properties": {
                    "transaction_identifier": {
                        "description": "The unique identifier for the transaction",
                        "$ref": "#/components/schemas/TransactionIdentifier"
                    },
                    "committed_state_identifier": {
                        "description": "The next ledger state identifier following the commit of this transaction",
                        "$ref": "#/components/schemas/CommittedStateIdentifier"
                    },
                    "operation_groups": {
                        "description": "Transactions are split into operation groups which are roughly equivalent to ledger accounting entries where all credits have an equivalent debit amount.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationGroup"
                        }
                    },
                    "metadata": {
                        "description": "Metadata about the transaction like size and fee paid",
                        "$ref": "#/components/schemas/CommittedTransactionMetadata"
                    }
                }
            },
            "CommittedTransactionMetadata": {
                "type": "object",
                "required": [
                    "size",
                    "hex",
                    "fee",
                    "timestamp"
                ],
                "properties": {
                    "size": {
                        "description": "The size of the transaction in bytes",
                        "type": "integer"
                    },
                    "hex": {
                        "description": "The raw transaction bytes in hex encoding",
                        "type": "string"
                    },
                    "fee": {
                        "description": "The fee paid in XRD subunits (10^18) for the transaction",
                        "$ref": "#/components/schemas/BigInteger"
                    },
                    "timestamp": {
                        "description": "Timestamp which the transaction was committed on",
                        "$ref": "#/components/schemas/LongNumber"
                    },
                    "signed_by": {
                        "description": "Optional public key which signed the transaction. If empty, then the transaction was produced by the system",
                        "$ref": "#/components/schemas/PublicKey"
                    },
                    "message": {
                        "description": "Optional hex encoded byte array in the transaction",
                        "type": "string"
                    }
                }
            },
            "OperationGroup": {
                "type": "object",
                "required": [
                    "operations"
                ],
                "properties": {
                    "operations": {
                        "description": "A group of operations representing a complete state update",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Operation"
                        }
                    },
                    "metadata": {
                        "description": "Metadata for the operation group",
                        "type": "object"
                    }
                }
            },
            "Operation": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "The type of operation: Resource, Data, or ResourceAndData",
                        "type": "string"
                    },
                    "address_identifier": {
                        "description": "The address on which the operation is acting on.",
                        "$ref": "#/components/schemas/AddressIdentifier"
                    },
                    "substate": {
                        "description": "The substate (similar to UTXO) which this operation represents",
                        "$ref": "#/components/schemas/Substate"
                    },
                    "amount": {
                        "description": "A balance change on the address represented by the `address_identifier`",
                        "$ref": "#/components/schemas/ResourceAmount"
                    },
                    "data": {
                        "description": "A data update on the address represented by the `address_identifier`",
                        "$ref": "#/components/schemas/Data"
                    },
                    "metadata": {
                        "description": "Metadata for the operation",
                        "$ref": "#/components/schemas/OperationMetadata"
                    }
                }
            },
            "Substate": {
                "type": "object",
                "required": [
                    "substate_identifier",
                    "substate_operation"
                ],
                "properties": {
                    "substate_operation": {
                        "description": "The type of substate operation (equivalent to UTXO create/spend)",
                        "type": "string",
                        "enum": [
                            "BOOTUP",
                            "SHUTDOWN"
                        ]
                    },
                    "substate_identifier": {
                        "$ref": "#/components/schemas/SubstateIdentifier"
                    }
                }
            },
            "TransactionIdentifier": {
                "type": "object",
                "required": [
                    "hash"
                ],
                "properties": {
                    "hash": {
                        "$ref": "#/components/schemas/TransactionIdentifierHash"
                    }
                }
            },
            "SubstateIdentifier": {
                "description": "Hex encoded unique identifier for the substate",
                "type": "object",
                "required": [
                    "identifier"
                ],
                "properties": {
                    "identifier": {
                        "type": "string"
                    }
                }
            },
            "OperationMetadata": {
                "type": "object"
            },
            "ResourceAmount": {
                "type": "object",
                "required": [
                    "value",
                    "resource_identifier"
                ],
                "properties": {
                    "value": {
                        "description": "A signed big integer representing an amount of resources in 10^18 subunits",
                        "$ref": "#/components/schemas/BigInteger"
                    },
                    "resource_identifier": {
                        "description": "The resource this amount represents",
                        "$ref": "#/components/schemas/ResourceIdentifier"
                    }
                }
            },
            "Data": {
                "type": "object",
                "required": [
                    "action",
                    "data_object"
                ],
                "properties": {
                    "action": {
                        "description": "Data action to take on `object`",
                        "type": "string",
                        "enum": [
                            "CREATE",
                            "DELETE"
                        ]
                    },
                    "data_object": {
                        "description": "The object of the data action",
                        "$ref": "#/components/schemas/DataObject"
                    }
                }
            },
            "DataObject": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "Type of Object",
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "VirtualParent": "#/components/schemas/VirtualParentData",
                        "UnclaimedRadixEngineAddress": "#/components/schemas/UnclaimedRadixEngineAddressData",
                        "RoundData": "#/components/schemas/RoundData",
                        "EpochData": "#/components/schemas/EpochData",
                        "TokenData": "#/components/schemas/TokenData",
                        "TokenMetadata": "#/components/schemas/TokenMetadata",
                        "PreparedValidatorRegistered": "#/components/schemas/PreparedValidatorRegistered",
                        "PreparedValidatorOwner": "#/components/schemas/PreparedValidatorOwner",
                        "PreparedValidatorFee": "#/components/schemas/PreparedValidatorFee",
                        "ValidatorMetadata": "#/components/schemas/ValidatorMetadata",
                        "ValidatorBFTData": "#/components/schemas/ValidatorBFTData",
                        "ValidatorAllowDelegation": "#/components/schemas/ValidatorAllowDelegation",
                        "ValidatorData": "#/components/schemas/ValidatorData",
                        "ValidatorSystemMetadata": "#/components/schemas/ValidatorSystemMetadata"
                    }
                }
            },
            "TokenData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "isMutable"
                        ],
                        "properties": {
                            "granularity": {
                                "description": "The granularity of a token given subunits of 10^18 (ie a granularity of 10^17 means that the token can be split into 0.1 chunks but no less.",
                                "$ref": "#/components/schemas/BigInteger"
                            },
                            "is_mutable": {
                                "description": "If true, the `owner` is able to mint/burn tokens. Otherwise, the token is a fixed supply token",
                                "type": "boolean"
                            },
                            "owner": {
                                "description": "The owner of the token (only available for mutable tokens) who can mint/burn",
                                "$ref": "#/components/schemas/AccountAddress"
                            }
                        }
                    }
                ]
            },
            "TokenMetadata": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "symbol"
                        ],
                        "properties": {
                            "symbol": {
                                "description": "The symbol of the token (not unique in the system)",
                                "type": "string"
                            },
                            "name": {
                                "description": "The name of the token",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description describing the token",
                                "type": "string"
                            },
                            "url": {
                                "description": "A url which points to more info about the token",
                                "type": "string"
                            },
                            "icon_url": {
                                "description": "A url which points to the icon of the token",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "VirtualParentData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    }
                ]
            },
            "UnclaimedRadixEngineAddressData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    }
                ]
            },
            "RoundData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "round"
                        ],
                        "properties": {
                            "round": {
                                "description": "The round of the system",
                                "$ref": "#/components/schemas/LongNumber"
                            }
                        }
                    }
                ]
            },
            "EpochData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "epoch"
                        ],
                        "properties": {
                            "epoch": {
                                "description": "The epoch of the system",
                                "$ref": "#/components/schemas/LongNumber"
                            }
                        }
                    }
                ]
            },
            "PreparedValidatorRegistered": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "registered"
                        ],
                        "properties": {
                            "registered": {
                                "description": "The registered flag of the validator which will be updated by the end of `epoch`",
                                "type": "boolean"
                            },
                            "epoch": {
                                "description": "Optional field, when non-empty describes the epoch the `registered` flag will update, otherwise no update is scheduled",
                                "$ref": "#/components/schemas/LongNumber"
                            }
                        }
                    }
                ]
            },
            "PreparedValidatorOwner": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "owner"
                        ],
                        "properties": {
                            "owner": {
                                "description": "The owner of the validator which will be updated by the end of `epoch`",
                                "$ref": "#/components/schemas/AccountAddress"
                            },
                            "epoch": {
                                "description": "Optional field, when non-empty describes the epoch the `owner` field will update, otherwise no update is scheduled",
                                "$ref": "#/components/schemas/LongNumber"
                            }
                        }
                    }
                ]
            },
            "PreparedValidatorFee": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "fee"
                        ],
                        "properties": {
                            "fee": {
                                "description": "The fee of the validator which will be updated in a future epoch",
                                "type": "integer"
                            },
                            "epoch": {
                                "description": "Optional field, when non-empty describes the epoch the `fee` field will update, otherwise no update is scheduled",
                                "$ref": "#/components/schemas/LongNumber"
                            }
                        }
                    }
                ]
            },
            "ValidatorMetadata": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "name",
                            "url"
                        ],
                        "properties": {
                            "name": {
                                "description": "The name for the validator",
                                "type": "string"
                            },
                            "url": {
                                "description": "A url which points to more info about the validator",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ValidatorBFTData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "proposals_completed",
                            "proposals_missed"
                        ],
                        "properties": {
                            "proposals_completed": {
                                "description": "The number of completed proposals by this validator as a leader in the current epoch",
                                "$ref": "#/components/schemas/LongNumber"
                            },
                            "proposals_missed": {
                                "description": "The number of missed proposals by this validator as a leader in the current epoch",
                                "$ref": "#/components/schemas/LongNumber"
                            }
                        }
                    }
                ]
            },
            "ValidatorAllowDelegation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "allow_delegation"
                        ],
                        "properties": {
                            "allow_delegation": {
                                "description": "Flag indicating whether stakers besides the owner of the validator can stake to this validator",
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "ValidatorData": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "owner",
                            "registered",
                            "fee"
                        ],
                        "properties": {
                            "owner": {
                                "description": "The owner of the validator who receives the fees when others stake to the validator",
                                "$ref": "#/components/schemas/AccountAddress"
                            },
                            "registered": {
                                "description": "Flag indicating whether a validator is registered to be part of the validator set",
                                "type": "boolean"
                            },
                            "fee": {
                                "description": "The fee percentage of the validator in 0.01% subunits (ie 10000 == 100%)",
                                "type": "integer"
                            }
                        }
                    }
                ]
            },
            "ValidatorSystemMetadata": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/DataObject"
                    },
                    {
                        "type": "object",
                        "required": [
                            "data"
                        ],
                        "properties": {
                            "data": {
                                "description": "A hex encoded byte array",
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "PublicKey": {
                "type": "object",
                "required": [
                    "hex"
                ],
                "properties": {
                    "hex": {
                        "description": "Compressed ECSDA Public Key hex encoded",
                        "type": "string"
                    }
                }
            },
            "NetworkIdentifier": {
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "example": {
                    "id": 1,
                    "name": "mainnet"
                }
            },
            "CommittedStateIdentifier": {
                "type": "object",
                "required": [
                    "state_version",
                    "transaction_accumulator"
                ],
                "properties": {
                    "state_version": {
                        "description": "The `state_version` represents some valid committed state on ledger (similar to block height).",
                        "$ref": "#/components/schemas/LongNumber"
                    },
                    "transaction_accumulator": {
                        "description": "Accumulator hash representing all transactions which occurred up to `state_version`. Hex encoded.",
                        "type": "string"
                    }
                },
                "example": {
                    "state_version": 0,
                    "transaction_accumulator": 0
                }
            },
            "PartialCommittedStateIdentifier": {
                "type": "object",
                "required": [
                    "state_version"
                ],
                "properties": {
                    "state_version": {
                        "description": "The `state_version` represents some valid committed state on ledger (similar to block height).",
                        "$ref": "#/components/schemas/LongNumber"
                    },
                    "transaction_accumulator": {
                        "description": "Accumulator hash representing all transactions which occurred up to `state_version`. Hex encoded.",
                        "type": "string"
                    }
                }
            },
            "AddressIdentifier": {
                "type": "object",
                "required": [
                    "address"
                ],
                "properties": {
                    "address": {
                        "description": "The top level identifier for an address",
                        "type": "string"
                    },
                    "sub_address": {
                        "description": "Further drill down into an address. Can be treated as an entirely separate address from `address` or as a child of `address`.",
                        "$ref": "#/components/schemas/SubAddress"
                    }
                }
            },
            "SubAddress": {
                "type": "object",
                "required": [
                    "address"
                ],
                "properties": {
                    "address": {
                        "description": "The subaddress",
                        "type": "string"
                    },
                    "metadata": {
                        "description": "Any additional data required to drill down to a particular address is added here",
                        "$ref": "#/components/schemas/SubAddressMetadata"
                    }
                }
            },
            "SubAddressMetadata": {
                "type": "object",
                "properties": {
                    "validator": {
                        "$ref": "#/components/schemas/ValidatorAddress"
                    },
                    "epoch_unlock": {
                        "$ref": "#/components/schemas/LongNumber"
                    }
                }
            },
            "ResourceIdentifier": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "The type of resource",
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "Token": "#/components/schemas/TokenResourceIdentifier",
                        "StakeOwnership": "#/components/schemas/StakeOwnershipResourceIdentifier"
                    }
                }
            },
            "TokenResourceIdentifier": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResourceIdentifier"
                    },
                    {
                        "type": "object",
                        "required": [
                            "rri"
                        ],
                        "properties": {
                            "rri": {
                                "description": "The RRI of the token",
                                "$ref": "#/components/schemas/RRI"
                            }
                        }
                    }
                ]
            },
            "StakeOwnershipResourceIdentifier": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ResourceIdentifier"
                    },
                    {
                        "type": "object",
                        "required": [
                            "validator"
                        ],
                        "properties": {
                            "validator": {
                                "description": "The validator associated with this stake ownership",
                                "$ref": "#/components/schemas/ValidatorAddress"
                            }
                        }
                    }
                ]
            },
            "Signature": {
                "type": "object",
                "required": [
                    "public_key",
                    "bytes"
                ],
                "properties": {
                    "public_key": {
                        "$ref": "#/components/schemas/PublicKey"
                    },
                    "bytes": {
                        "type": "string"
                    }
                }
            },
            "Bech32HRPs": {
                "type": "object",
                "required": [
                    "account_hrp",
                    "validator_hrp",
                    "node_hrp",
                    "resource_hrp_suffix"
                ],
                "properties": {
                    "account_hrp": {
                        "type": "string"
                    },
                    "validator_hrp": {
                        "type": "string"
                    },
                    "node_hrp": {
                        "type": "string"
                    },
                    "resource_hrp_suffix": {
                        "type": "string"
                    }
                }
            },
            "AccountAddress": {
                "type": "string",
                "pattern": "^(r|t|d)dx[0-9]?1[023456789ACDEFGHJKLMNPQRSTUVWXYZacdefghjklmnpqrstuvwxyz]{6,69}$"
            },
            "ValidatorAddress": {
                "type": "string",
                "pattern": "^(r|t|d)v[0-9]?1[023456789ACDEFGHJKLMNPQRSTUVWXYZacdefghjklmnpqrstuvwxyz]{6,69}$"
            },
            "RRI": {
                "type": "string",
                "pattern": "^[!\\\"#$%&'()*+,-.\\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\\[\\\\\\]\\^_`abcdefghijklmnopqrstuvwxyz{|}~]{1,83}_r[rb]1[023456789ACDEFGHJKLMNPQRSTUVWXYZacdefghjklmnpqrstuvwxyz]{6,90}$"
            },
            "LongNumber": {
                "type": "integer",
                "format": "int64"
            },
            "BigInteger": {
                "type": "string",
                "pattern": "^-?[0-9]+$"
            },
            "TransactionIdentifierHash": {
                "type": "string",
                "pattern": "^[0123456789abcdef]{64}$",
                "maxLength": 64,
                "minLength": 64
            },
            "InternalServerError": {
                "type": "object",
                "properties": {
                    "exception": {
                        "type": "string"
                    },
                    "cause": {
                        "type": "string"
                    }
                }
            },
            "InvalidJsonError": {
                "type": "object",
                "properties": {
                    "cause": {
                        "type": "string"
                    }
                }
            },
            "InvalidRequestError": {
                "type": "object",
                "properties": {
                    "pointer": {
                        "type": "string"
                    },
                    "cause": {
                        "type": "string"
                    }
                }
            },
            "UnexpectedError": {
                "type": "object",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "message",
                    "mapping": {
                        "INTERNAL_SERVER_ERROR": "#/components/schemas/InternalServerError",
                        "INVALID_JSON": "#/components/schemas/InvalidJsonError",
                        "INVALID_REQUEST": "#/components/schemas/InvalidRequestError"
                    }
                }
            }
        }
    }
}
