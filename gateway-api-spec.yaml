openapi: 3.0.0
info:
  version: 1.0.2
  title: Radix Gateway API
  license:
    name: The Radix License, Version 1.0
    url: https://www.radixfoundation.org/licenses/LICENSE-v1
  description: |
    This API is designed to enable clients to efficiently query information on the RadixDLT ledger, and allow clients to
    simply build and submit transactions to the network.

    The API is designed to replace the original Olympia `archive node API`, and enables moving the indexes and public-facing API off-node.

    # Overview

    The Gateway API is separated into distinct groupings:

    * `/gateway` - Information about the Gateway API status
    * `/account/*` - To query account-related information
    * `/token/*` - To query token-related information
    * `/validator/*` and `/validators` - To query validator-related information
    * `/transaction/*` - To build, finalize and submit transactions, and to read the status and content of submitted and on-ledger transactions.

    # Radix API Comparison

    * [Core API](https://redocly.github.io/redoc/?url=https://raw.githubusercontent.com/radixdlt/radixdlt/develop/radixdlt-core/radixdlt/src/main/java/com/radixdlt/api/core/api.yaml) -
      The Core API is a low level API exposed by full nodes, and designed for use on internal networks. It is primarily designed
      for network integrations such as exchanges, ledger analytics providers, or hosted ledger data dashboards.
    * [System API](https://redocly.github.io/redoc/?url=https://raw.githubusercontent.com/radixdlt/radixdlt/develop/radixdlt-core/radixdlt/src/main/java/com/radixdlt/api/system/api.yaml) -
      The System API is a private API exposed by full nodes to read system status.

    The Gateway API offers a much wider range of query options and is more performant than the Core API, by indexing the Core API transaction stream into
    a relational database.

    The Gateway API transaction/construction endpoints operate with the concept of "actions" - these are higher-levels of intent compared with the
    Core API, which makes it easier for clients to use. The Core API should be used if you require more power/flexiblity for managing UTXOs, or
    submitting transactions which can't be mapped to a Gateway API action.
servers:
  - url: http://localhost:5208
  - url: https://stokenet-gateway.radixdlt.com
  - url: https://mainnet-gateway.radixdlt.com
tags:
  - name: gateway-endpoint
    x-displayName: Gateway Status
    description: To query information about the Gateway API status.
  - name: account-endpoint
    x-displayName: Accounts
    description: To query account-related information.
  - name: token-endpoint
    x-displayName: Tokens
    description: To query token-related information.
  - name: validator-endpoint
    x-displayName: Validators
    description: To query validator-related information.
  - name: transaction-endpoint
    x-displayName: Transactions
    description: To build, finalize and submit transactions, and to query transaction status and contents.
paths:
  "/gateway":
    post:
      summary: Get Gateway Info
      tags:
        - gateway-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GatewayRequest"
      responses:
        '200':
          description: The Network
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GatewayResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/token/native":
    post:
      summary: Get Native Token Info
      tags:
        - token-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenNativeRequest"
      responses:
        '200':
          description: Token info
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenNativeResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/token":
    post:
      summary: Get Token Info
      tags:
        - token-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenRequest"
      responses:
        '200':
          description: Token info
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/token/derive":
    post:
      summary: Derive Token Identifier
      tags:
        - token-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenDeriveRequest"
      responses:
        '200':
          description: Token info
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenDeriveResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/account/derive":
    post:
      summary: Derive Account Identifier
      tags:
        - account-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccountDeriveRequest"
      responses:
        '200':
          description: Token info
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountDeriveResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/account/balances":
    post:
      summary: Get Account Balances
      tags:
        - account-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccountBalancesRequest"
      responses:
        '200':
          description: Balances of Account
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountBalancesResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/account/stakes":
    post:
      summary: Get Stake Positions
      tags:
        - account-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccountStakesRequest"
      responses:
        '200':
          description: List of Stake Positions
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountStakesResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/account/unstakes":
    post:
      summary: Get Unstake Positions
      tags:
        - account-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccountUnstakesRequest"
      responses:
        '200':
          description: List of Unstake Positions
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountUnstakesResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/account/transactions":
    post:
      summary: Get Account Transactions
      tags:
        - account-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccountTransactionsRequest"
      responses:
        '200':
          description: List of Transactions
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccountTransactionsResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/validator":
    post:
      summary: Get Validator
      tags:
        - validator-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ValidatorRequest"
      responses:
        '200':
          description: Validator Info
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidatorResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/validator/derive":
    post:
      summary: Get Validator Identifier
      tags:
        - validator-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ValidatorDeriveRequest"
      responses:
        '200':
          description: Validator Info
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidatorDeriveResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/validators":
    post:
      summary: Get Validators
      tags:
        - validator-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ValidatorsRequest"
      responses:
        '200':
          description: Ordered list of validators
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidatorsResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/transaction/rules":
    post:
      summary: Get Transaction Rules
      tags:
        - transaction-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransactionRulesRequest"
      responses:
        '200':
          description: Rules for transaction construction
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionRulesResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/transaction/build":
    post:
      summary: Build Transaction
      tags:
        - transaction-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransactionBuildRequest"
      responses:
        '200':
          description: An unsigned transaction
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionBuildResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/transaction/finalize":
    post:
      summary: Finalize Transaction
      tags:
        - transaction-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransactionFinalizeRequest"
      responses:
        '200':
          description: Final Signed Transaction
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionFinalizeResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/transaction/submit":
    post:
      summary: Submit Transaction
      tags:
        - transaction-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransactionSubmitRequest"
      responses:
        '200':
          description: Successful Submission
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionSubmitResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
  "/transaction/status":
    post:
      summary: Get Transaction
      tags:
        - transaction-endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransactionStatusRequest"
      responses:
        '200':
          description: Transaction Status
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransactionStatusResponse"
        '500':
          description: Gateway error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
components:
  schemas:
    AccountBalancesRequest:
      type: object
      required:
        - network_identifier
        - account_identifier
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        account_identifier:
          $ref: "#/components/schemas/AccountIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        network_identifier:
          network: mainnet
        account_identifier:
          address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88
    AccountBalancesResponse:
      type: object
      required:
        - ledger_state
        - account_balances
      properties:
        ledger_state:
          $ref: "#/components/schemas/LedgerState"
        account_balances:
          $ref: "#/components/schemas/AccountBalances"
    AccountBalances:
      type: object
      required:
        - staked_and_unstaking_balance
        - liquid_balances
      properties:
        staked_and_unstaking_balance:
          "$ref": "#/components/schemas/TokenAmount"
        liquid_balances:
          type: array
          items:
            "$ref": "#/components/schemas/TokenAmount"
    AccountStakesRequest:
      type: object
      required:
        - network_identifier
        - account_identifier
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        account_identifier:
          $ref: "#/components/schemas/AccountIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        network_identifier:
          network: mainnet
        account_identifier:
          address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88
    AccountStakesResponse:
      type: object
      required:
        - pending_stakes
        - stakes
        - ledger_state
      properties:
        ledger_state:
          $ref: "#/components/schemas/LedgerState"
        pending_stakes:
          type: array
          items:
            $ref: "#/components/schemas/AccountStakeEntry"
        stakes:
          type: array
          items:
            $ref: "#/components/schemas/AccountStakeEntry"
    AccountStakeEntry:
      type: object
      required:
        - validator_identifier
        - delegated_stake
      properties:
        validator_identifier:
          "$ref": "#/components/schemas/ValidatorIdentifier"
        delegated_stake:
          "$ref": "#/components/schemas/TokenAmount"
    AccountUnstakesRequest:
      type: object
      required:
        - network_identifier
        - account_identifier
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        account_identifier:
          $ref: "#/components/schemas/AccountIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        network_identifier:
          network: mainnet
        account_identifier:
          address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88
    AccountUnstakesResponse:
      type: object
      required:
        - ledger_state
        - pending_unstakes
        - unstakes
      properties:
        ledger_state:
          $ref: "#/components/schemas/LedgerState"
        pending_unstakes:
          type: array
          items:
            $ref: "#/components/schemas/AccountUnstakeEntry"
        unstakes:
          type: array
          items:
            $ref: "#/components/schemas/AccountUnstakeEntry"
    AccountUnstakeEntry:
      type: object
      required:
        - validator_identifier
        - unstaking_amount
        - epochs_until_unlocked
      properties:
        validator_identifier:
          "$ref": "#/components/schemas/ValidatorIdentifier"
        unstaking_amount:
          "$ref": "#/components/schemas/TokenAmount"
        epochs_until_unlocked:
          type: integer
          format: int64
    AccountTransactionsRequest:
      type: object
      required:
        - network_identifier
        - account_identifier
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        account_identifier:
          $ref: "#/components/schemas/AccountIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
        cursor:
          type: string
        limit:
          type: integer
      example:
        network_identifier:
          network: mainnet
        account_identifier:
          address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88
        cursor: '0'
        limit: 1
    AccountTransactionsResponse:
      type: object
      required:
        - ledger_state
        - transactions
      properties:
        ledger_state:
          $ref: "#/components/schemas/LedgerState"
        total_count:
          type: integer
          format: int64
        next_cursor:
          type: string
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/TransactionInfo"
    TransferTokens:
      allOf:
        - "$ref": "#/components/schemas/Action"
        - type: object
          required:
            - from_account
            - to_account
            - amount
          properties:
            from_account:
              "$ref": "#/components/schemas/AccountIdentifier"
            to_account:
              "$ref": "#/components/schemas/AccountIdentifier"
            amount:
              "$ref": "#/components/schemas/TokenAmount"
    StakeTokens:
      allOf:
        - "$ref": "#/components/schemas/Action"
        - type: object
          required:
            - from_account
            - to_validator
            - amount
          properties:
            from_account:
              "$ref": "#/components/schemas/AccountIdentifier"
            to_validator:
              "$ref": "#/components/schemas/ValidatorIdentifier"
            amount:
              "$ref": "#/components/schemas/TokenAmount"
    UnstakeTokens:
      description: An action to unstake tokens. Exactly one of amount or unstake_percentage is required.
      allOf:
        - "$ref": "#/components/schemas/Action"
        - type: object
          required:
            - from_validator
            - to_account
          properties:
            from_validator:
              "$ref": "#/components/schemas/ValidatorIdentifier"
            to_account:
              "$ref": "#/components/schemas/AccountIdentifier"
            amount:
              "$ref": "#/components/schemas/TokenAmount"
            unstake_percentage:
              type: number
              minimum: 0
              maximum: 100
    CreateTokenDefinition:
      allOf:
        - "$ref": "#/components/schemas/Action"
        - type: object
          required:
            - token_properties
            - token_supply
          properties:
            token_properties:
              "$ref": "#/components/schemas/TokenProperties"
            token_supply:
              "$ref": "#/components/schemas/TokenAmount"
            to_account:
              "$ref": "#/components/schemas/AccountIdentifier"
    MintTokens:
      allOf:
        - "$ref": "#/components/schemas/Action"
        - type: object
          required:
            - to_account
            - amount
          properties:
            to_account:
              "$ref": "#/components/schemas/AccountIdentifier"
            amount:
              "$ref": "#/components/schemas/TokenAmount"
    BurnTokens:
      allOf:
        - "$ref": "#/components/schemas/Action"
        - type: object
          required:
            - from_account
            - amount
          properties:
            from_account:
              "$ref": "#/components/schemas/AccountIdentifier"
            amount:
              "$ref": "#/components/schemas/TokenAmount"
    Action:
      type: object
      required:
        - type
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          CreateTokenDefinition: "#/components/schemas/CreateTokenDefinition"
          TransferTokens: "#/components/schemas/TransferTokens"
          StakeTokens: "#/components/schemas/StakeTokens"
          UnstakeTokens: "#/components/schemas/UnstakeTokens"
          MintTokens: "#/components/schemas/MintTokens"
          BurnTokens: "#/components/schemas/BurnTokens"
    TransactionRulesRequest:
      type: object
      required:
        - network_identifier
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        network_identifier:
          network: mainnet
    TransactionRulesResponse:
      type: object
      required:
        - ledger_state
        - transaction_rules
      properties:
        ledger_state:
          "$ref": "#/components/schemas/LedgerState"
        transaction_rules:
          "$ref": "#/components/schemas/TransactionRules"
    TransactionRules:
      type: object
      properties:
        maximum_message_length:
          type: integer
        minimum_stake:
          "$ref": "#/components/schemas/TokenAmount"
    TransactionBuildRequest:
      type: object
      required:
        - network_identifier
        - actions
        - fee_payer
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
        actions:
          type: array
          items:
            "$ref": "#/components/schemas/Action"
        fee_payer:
          "$ref": "#/components/schemas/AccountIdentifier"
        message:
          type: string
        disable_token_mint_and_burn:
          type: boolean
      example:
        network_identifier:
          network: mainnet
        actions:
          - type: TransferTokens
            from_account:
              address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88
            to_account:
              address: rdx1qspcvwwuf8s549zyspz683v4n93g9kzpn6u6a9yalwzt00zghg75lmsftwv29
            amount:
              token_identifier:
                rri: xrd_rr1qy5wfsfh
              value: '123000000000000000'
        fee_payer:
          address: rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88
        disable_token_mint_and_burn: true
    TransactionBuildResponse:
      type: object
      required:
        - transaction_build
      properties:
        transaction_build:
          $ref: "#/components/schemas/TransactionBuild"
    TransactionBuild:
      type: object
      required:
        - fee
        - unsigned_transaction
        - payload_to_sign
      properties:
        fee:
          "$ref": "#/components/schemas/TokenAmount"
        unsigned_transaction:
          type: string
        payload_to_sign:
          type: string
    TransactionFinalizeRequest:
      type: object
      required:
        - network_identifier
        - unsigned_transaction
        - signature
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        unsigned_transaction:
          type: string
        signature:
          $ref: "#/components/schemas/Signature"
        submit:
          type: boolean
    PublicKey:
      type: object
      required:
        - hex
      properties:
        hex:
          description: The hex-encoded compressed public key (33 bytes)
          type: string
    Signature:
      type: object
      required:
        - public_key
        - bytes
      properties:
        public_key:
          $ref: "#/components/schemas/PublicKey"
        bytes:
          description: The hex-encoded signature in DER format
          type: string
    TransactionFinalizeResponse:
      type: object
      required:
        - transaction_identifier
        - signed_transaction
      properties:
        signed_transaction:
          type: string
        transaction_identifier:
          $ref: "#/components/schemas/TransactionIdentifier"
    TransactionSubmitRequest:
      type: object
      required:
        - network_identifier
        - signed_transaction
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        signed_transaction:
          type: string
    TransactionSubmitResponse:
      type: object
      required:
        - transaction_identifier
      properties:
        transaction_identifier:
          $ref: "#/components/schemas/TransactionIdentifier"
    GatewayRequest:
      type: object
      example: {}
    GatewayResponse:
      type: object
      required:
        - network_identifier
        - gateway_api
        - ledger_state
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        gateway_api:
          $ref: "#/components/schemas/GatewayApiVersions"
        ledger_state:
          $ref: "#/components/schemas/LedgerState"
        target_ledger_state:
          $ref: "#/components/schemas/TargetLedgerState"
    TokenRequest:
      type: object
      required:
        - network_identifier
        - token_identifier
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        token_identifier:
          $ref: "#/components/schemas/TokenIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        network_identifier:
          network: mainnet
        token_identifier:
          rri: xrd_rr1qy5wfsfh
    LedgerState:
      type: object
      required:
        - version
        - timestamp
        - epoch
        - round
      properties:
        version:
          type: integer
          format: int64
        timestamp:
          type: string
        epoch:
          type: integer
          format: int64
        round:
          type: integer
          format: int64
    TargetLedgerState:
      type: object
      required:
        - version
      properties:
        version:
          type: integer
          format: int64
    PartialLedgerStateIdentifier:
      description: Allows a client to request a response in relation to a certain ledger position.
        If the version is provided, the latest ledger state <= the given version is returned.
        If a timestamp is provided, the latest ledger state <= the given timestamp is returned.
        If an epoch is provided, the ledger state at the given epoch <= the given round (else round 0) is returned.
      type: object
      properties:
        version:
          type: integer
          format: int64
        timestamp:
          type: string
        epoch:
          type: integer
          format: int64
        round:
          type: integer
          format: int64
    TokenResponse:
      type: object
      required:
        - ledger_state
        - token
      properties:
        ledger_state:
          $ref: "#/components/schemas/LedgerState"
        token:
          $ref: "#/components/schemas/Token"
    TokenNativeRequest:
      type: object
      required:
        - network_identifier
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        network_identifier:
          network: mainnet
    TokenNativeResponse:
      type: object
      required:
        - token
        - ledger_state
      properties:
        ledger_state:
          $ref: "#/components/schemas/LedgerState"
        token:
          $ref: "#/components/schemas/Token"
    TokenDeriveRequest:
      type: object
      required:
        - network_identifier
        - public_key
        - symbol
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        public_key:
          $ref: "#/components/schemas/PublicKey"
        symbol:
          type: string
    TokenDeriveResponse:
      type: object
      required:
        - token_identifier
      properties:
        token_identifier:
          $ref: "#/components/schemas/TokenIdentifier"
    AccountDeriveRequest:
      type: object
      required:
        - network_identifier
        - public_key
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        public_key:
          $ref: "#/components/schemas/PublicKey"
    AccountDeriveResponse:
      type: object
      required:
        - account_identifier
      properties:
        account_identifier:
          $ref: "#/components/schemas/AccountIdentifier"
    ValidatorDeriveRequest:
      type: object
      required:
        - network_identifier
        - public_key
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        public_key:
          $ref: "#/components/schemas/PublicKey"
    ValidatorDeriveResponse:
      type: object
      required:
        - account_identifier
      properties:
        account_identifier:
          $ref: "#/components/schemas/ValidatorIdentifier"
    TransactionStatusRequest:
      type: object
      required:
        - network_identifier
        - transaction_identifier
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        transaction_identifier:
          $ref: "#/components/schemas/TransactionIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        network_identifier:
          network: mainnet
        transaction_identifier:
          hash: ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d99337193811842
    TransactionStatusResponse:
      type: object
      required:
        - ledger_state
        - transaction
      properties:
        ledger_state:
          $ref: "#/components/schemas/LedgerState"
        transaction:
          $ref: "#/components/schemas/TransactionInfo"
    ValidatorRequest:
      type: object
      required:
        - network_identifier
        - validator_identifier
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        validator_identifier:
          $ref: "#/components/schemas/ValidatorIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        network_identifier:
          network: mainnet
        validator_identifier:
          address: rv1qf2x63qx4jdaxj83kkw2yytehvvmu6r2xll5gcp6c9rancmrfsgfwttnczx
    ValidatorResponse:
      type: object
      required:
        - ledger_state
        - validator
      properties:
        ledger_state:
          $ref: "#/components/schemas/LedgerState"
        validator:
          $ref: "#/components/schemas/Validator"
    ValidatorsRequest:
      type: object
      required:
        - network_identifier
      properties:
        network_identifier:
          $ref: "#/components/schemas/NetworkIdentifier"
        at_state_identifier:
          $ref: "#/components/schemas/PartialLedgerStateIdentifier"
      example:
        network_identifier:
          network: mainnet
    ValidatorsResponse:
      type: object
      required:
        - ledger_state
        - validators
      properties:
        ledger_state:
          $ref: "#/components/schemas/LedgerState"
        validators:
          type: array
          items:
            $ref: "#/components/schemas/Validator"
    Validator:
      type: object
      required:
        - validator_identifier
        - stake
        - info
        - properties
      properties:
        validator_identifier:
          "$ref": "#/components/schemas/ValidatorIdentifier"
        stake:
          "$ref": "#/components/schemas/TokenAmount"
        info:
          "$ref": "#/components/schemas/ValidatorInfo"
        properties:
          "$ref": "#/components/schemas/ValidatorProperties"
      example:
        validator_identifier:
          address: rv1qf2x63qx4jdaxj83kkw2yytehvvmu6r2xll5gcp6c9rancmrfsgfwttnczx
        stake:
          token_identifier:
            rri: xrd_rr1qy5wfsfh
          value: '100000000000000000000'
        properties:
          url: https://learn.radixdlt.com/article/will-the-radix-foundation-operate-validator-nodes
          validator_fee_percentage: 100
          name: Radix Foundation eu-west-1 node0 mainnet
          registered: true
          owner_account_identifier:
            address: rdx1qspldshtx0s2l2rcnaqtqpqz8vwps2y6d9se0wq25xrg92l66cmp6mcnc6pyu
          external_stake_accepted: false
        info:
          owner_stake:
            token_identifier:
              rri: xrd_rr1qy5wfsfh
            value: '0'
          uptime:
            epoch_range:
              from: 1
              to: 1
            uptime_percentage: 100
            proposals_missed: 0
            proposals_completed: 108320
    ValidatorProperties:
      type: object
      required:
        - url
        - validator_fee_percentage
        - name
        - registered
        - owner_account_identifier
        - external_stake_accepted
      properties:
        url:
          type: string
        validator_fee_percentage:
          type: number
          minimum: 0
          maximum: 100
        name:
          type: string
        registered:
          type: boolean
        owner_account_identifier:
          "$ref": "#/components/schemas/AccountIdentifier"
        external_stake_accepted:
          type: boolean
    ValidatorInfo:
      type: object
      required:
        - owner_stake
        - uptime
      properties:
        owner_stake:
          "$ref": "#/components/schemas/TokenAmount"
        uptime:
          "$ref": "#/components/schemas/ValidatorUptime"
    ValidatorUptime:
      type: object
      required:
        - epoch_range
        - uptime_percentage
        - proposals_missed
        - proposals_completed
      properties:
        epoch_range:
          "$ref": "#/components/schemas/EpochRange"
        uptime_percentage:
          type: number
          minimum: 0
          maximum: 100
        proposals_missed:
          type: integer
          format: int64
          minimum: 0
        proposals_completed:
          type: integer
          format: int64
          minimum: 0
    EpochRange:
      type: object
      required:
        - from
        - to
      properties:
        from:
          type: integer
          format: int64
        to:
          type: integer
          format: int64
    Token:
      type: object
      required:
        - token_identifier
        - token_supply
        - info
        - token_properties
      properties:
        token_identifier:
          "$ref": "#/components/schemas/TokenIdentifier"
        token_supply:
          "$ref": "#/components/schemas/TokenAmount"
        info:
          "$ref": "#/components/schemas/TokenInfo"
        token_properties:
          "$ref": "#/components/schemas/TokenProperties"
      example:
        token_identifier:
          rri: xrd_rr1qy5wfsfh
        token_supply:
          token_identifier:
            rri: xrd_rr1qy5wfsfh
          value: '12014560679861300000000000000'
        info:
          total_burned:
            token_identifier:
              rri: xrd_rr1qy5wfsfh
            value: '11437173800000000000000'
          total_minted:
            token_identifier:
              rri: xrd_rr1qy5wfsfh
            value: '12014572117035100000000000000'
        token_properties:
          icon_url: https://assets.radixdlt.com/icons/icon-xrd-32x32.png
          is_supply_mutable: true
          symbol: xrd
          granularity: '1'
          name: Radix
          description: The Radix Public Network's native token, used to pay the network's
            required transaction fees and to secure the network through staking to
            its validator nodes.
          url: https://tokens.radixdlt.com
    TokenInfo:
      type: object
      required:
        - total_minted
        - total_burned
      properties:
        total_minted:
          "$ref": "#/components/schemas/TokenAmount"
        total_burned:
          "$ref": "#/components/schemas/TokenAmount"
    TokenProperties:
      type: object
      required:
        - symbol
        - is_supply_mutable
        - granularity
        - name
        - description
        - url
        - icon_url
      properties:
        name:
          type: string
        description:
          type: string
        icon_url:
          type: string
        url:
          type: string
        symbol:
          type: string
        is_supply_mutable:
          type: boolean
        granularity:
          "$ref": "#/components/schemas/BigInteger"
        owner:
          "$ref": "#/components/schemas/AccountIdentifier"
    TransactionInfo:
      type: object
      required:
        - transaction_status
        - transaction_identifier
        - actions
        - metadata
        - fee_paid
      properties:
        transaction_status:
          "$ref": "#/components/schemas/TransactionStatus"
        transaction_identifier:
          "$ref": "#/components/schemas/TransactionIdentifier"
        actions:
          type: array
          items:
            "$ref": "#/components/schemas/Action"
        fee_paid:
          $ref: "#/components/schemas/TokenAmount"
        metadata:
          "$ref": "#/components/schemas/TransactionMetadata"
    TransactionStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - PENDING
            - CONFIRMED
            - FAILED
        confirmed_time:
          type: string
        ledger_state_version:
          type: integer
          format: int64
      example:
        status: CONFIRMED
        confirmed_time: 2021-07-27T17:35:10.726Z
    TransactionMetadata:
      type: object
      required:
        - hex
      properties:
        hex:
          type: string
        message:
          type: string
    TokenAmount:
      type: object
      required:
        - value
        - token_identifier
      properties:
        value:
          "$ref": "#/components/schemas/BigInteger"
        token_identifier:
          "$ref": "#/components/schemas/TokenIdentifier"
    BigInteger:
      type: string
      pattern: "^-?[0-9]+$"
    GatewayApiVersions:
      type: object
      required:
        - version
        - open_api_schema_version
      properties:
        version:
          type: string
        open_api_schema_version:
          type: string
    NetworkIdentifier:
      type: object
      required:
        - network
      properties:
        network:
          type: string
    AccountIdentifier:
      type: object
      required:
        - address
      properties:
        address:
          type: string
    ValidatorIdentifier:
      type: object
      required:
        - address
      properties:
        address:
          type: string
    TokenIdentifier:
      type: object
      required:
        - rri
      properties:
        rri:
          type: string
    TransactionIdentifier:
      type: object
      required:
        - hash
      properties:
        hash:
          type: string
          pattern: "^[0123456789abcdef]{64}$"
          maxLength: 64
          minLength: 64
    ErrorResponse:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
        details:
          $ref: "#/components/schemas/GatewayError"
        trace_id:
          type: string
    GatewayError:
      type: object
      required:
        - type
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          NetworkNotSupportedError: "#/components/schemas/NetworkNotSupportedError"
          InvalidSignatureError: "#/components/schemas/InvalidSignatureError"
          InvalidTransactionError: "#/components/schemas/InvalidTransactionError"
          InvalidTokenRRIError: "#/components/schemas/InvalidTokenRRIError"
          InvalidAccountAddressError: "#/components/schemas/InvalidAccountAddressError"
          InvalidValidatorAddressError: "#/components/schemas/InvalidValidatorAddressError"
          InvalidPublicKeyError: "#/components/schemas/InvalidPublicKeyError"
          InvalidTokenSymbolError: "#/components/schemas/InvalidTokenSymbolError"
          InvalidActionError: "#/components/schemas/InvalidActionError"
          TokenNotFoundError: "#/components/schemas/TokenNotFoundError"
          TransactionNotFoundError: "#/components/schemas/TransactionNotFoundError"
          NotEnoughNativeTokensForFeesError: "#/components/schemas/NotEnoughNativeTokensForFeesError"
          NotEnoughTokensForTransferError: "#/components/schemas/NotEnoughTokensForTransferError"
          NotEnoughTokensForStakeError: "#/components/schemas/NotEnoughTokensForStakeError"
          NotEnoughTokensForUnstakeError: "#/components/schemas/NotEnoughTokensForUnstakeError"
          BelowMinimumStakeError: "#/components/schemas/BelowMinimumStakeError"
          CannotStakeError: "#/components/schemas/CannotStakeError"
          MessageTooLongError: "#/components/schemas/MessageTooLongError"
          CouldNotConstructFeesError: "#/components/schemas/CouldNotConstructFeesError"
          InvalidRequestError: "#/components/schemas/InvalidRequestError"
          InternalServerError: "#/components/schemas/InternalServerError"
    InternalServerError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - exception
            - cause
          properties:
            exception:
              type: string
            cause:
              type: string
    InvalidRequestError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - validation_errors
          properties:
            validation_errors:
              type: array
              items:
                $ref: "#/components/schemas/ValidationErrorsAtPath"
    ValidationErrorsAtPath:
      type: object
      required:
        - path
        - errors
      properties:
        path:
          type: string
        errors:
          type: array
          items:
            type: string
    NetworkNotSupportedError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - networks_supported
          properties:
            networks_supported:
              type: array
              items:
                type: string
    InvalidActionError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - invalid_action
          properties:
            invalid_action:
              $ref: "#/components/schemas/Action"
    InvalidSignatureError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - invalid_signature
          properties:
            invalid_signature:
              $ref: "#/components/schemas/Signature"
    InvalidTransactionError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - invalid_transaction
            - message
          properties:
            invalid_transaction:
              type: string
            message:
              type: string
    NotEnoughNativeTokensForFeesError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - required_amount
            - available_amount
          properties:
            required_amount:
              $ref: "#/components/schemas/TokenAmount"
            available_amount:
              $ref: "#/components/schemas/TokenAmount"
    NotEnoughTokensForTransferError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - requested_amount
            - available_amount
          properties:
            requested_amount:
              $ref: "#/components/schemas/TokenAmount"
            available_amount:
              $ref: "#/components/schemas/TokenAmount"
    NotEnoughTokensForStakeError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - requested_amount
            - available_amount
          properties:
            requested_amount:
              $ref: "#/components/schemas/TokenAmount"
            available_amount:
              $ref: "#/components/schemas/TokenAmount"
    NotEnoughTokensForUnstakeError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - requested_amount
            - stake
            - pending_stake
          properties:
            requested_amount:
              $ref: "#/components/schemas/TokenAmount"
            stake:
              $ref: "#/components/schemas/AccountStakeEntry"
            pending_stake:
              $ref: "#/components/schemas/AccountStakeEntry"
    BelowMinimumStakeError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - requested_amount
            - minimum_amount
          properties:
            requested_amount:
              $ref: "#/components/schemas/TokenAmount"
            minimum_amount:
              $ref: "#/components/schemas/TokenAmount"
    CannotStakeError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - owner
            - user
          properties:
            owner:
              $ref: "#/components/schemas/AccountIdentifier"
            user:
              $ref: "#/components/schemas/AccountIdentifier"
    MessageTooLongError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - length_limit
            - attempted_length
          properties:
            length_limit:
              type: integer
            attempted_length:
              type: integer
    CouldNotConstructFeesError:
      allOf:
        - "$ref": "#/components/schemas/GatewayError"
        - type: object
          required:
            - attempts
          properties:
            attempts:
              type: integer
    InvalidPublicKeyError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - invalid_public_key
          properties:
            invalid_public_key:
              type: string
    InvalidTokenSymbolError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - invalid_token_symbol
          properties:
            invalid_token_symbol:
              type: string
    InvalidTokenRRIError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - invalid_rri
          properties:
            invalid_rri:
              type: string
    InvalidAccountAddressError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - invalid_account_address
          properties:
            invalid_account_address:
              type: string
    InvalidValidatorAddressError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - invalid_validator_address
          properties:
            invalid_account_address:
              type: string
    TokenNotFoundError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - token_not_found
          properties:
            token_not_found:
              $ref: "#/components/schemas/TokenIdentifier"
    TransactionNotFoundError:
      allOf:
        - $ref: "#/components/schemas/GatewayError"
        - type: object
          required:
            - transaction_not_found
          properties:
            transaction_not_found:
              $ref: "#/components/schemas/TransactionIdentifier"
