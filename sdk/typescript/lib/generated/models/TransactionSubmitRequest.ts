/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransactionSubmitRequest
 */
export interface TransactionSubmitRequest {
    /**
     * The notarized transaction payload which can be submitted, hex encoded.
     * @type {string}
     * @memberof TransactionSubmitRequest
     */
    notarized_transaction: string;
}

/**
 * Check if a given object implements the TransactionSubmitRequest interface.
 */
export function instanceOfTransactionSubmitRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "notarized_transaction" in value;

    return isInstance;
}

export function TransactionSubmitRequestFromJSON(json: any): TransactionSubmitRequest {
    return TransactionSubmitRequestFromJSONTyped(json, false);
}

export function TransactionSubmitRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionSubmitRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'notarized_transaction': json['notarized_transaction'],
    };
}

export function TransactionSubmitRequestToJSON(value?: TransactionSubmitRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'notarized_transaction': value.notarized_transaction,
    };
}

