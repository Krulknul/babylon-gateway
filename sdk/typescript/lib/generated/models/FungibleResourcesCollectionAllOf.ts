/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FungibleResourcesCollectionItem } from './FungibleResourcesCollectionItem';
import {
    FungibleResourcesCollectionItemFromJSON,
    FungibleResourcesCollectionItemFromJSONTyped,
    FungibleResourcesCollectionItemToJSON,
} from './FungibleResourcesCollectionItem';

/**
 * 
 * @export
 * @interface FungibleResourcesCollectionAllOf
 */
export interface FungibleResourcesCollectionAllOf {
    /**
     * 
     * @type {Array<FungibleResourcesCollectionItem>}
     * @memberof FungibleResourcesCollectionAllOf
     */
    items: Array<FungibleResourcesCollectionItem>;
}

/**
 * Check if a given object implements the FungibleResourcesCollectionAllOf interface.
 */
export function instanceOfFungibleResourcesCollectionAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function FungibleResourcesCollectionAllOfFromJSON(json: any): FungibleResourcesCollectionAllOf {
    return FungibleResourcesCollectionAllOfFromJSONTyped(json, false);
}

export function FungibleResourcesCollectionAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): FungibleResourcesCollectionAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(FungibleResourcesCollectionItemFromJSON)),
    };
}

export function FungibleResourcesCollectionAllOfToJSON(value?: FungibleResourcesCollectionAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(FungibleResourcesCollectionItemToJSON)),
    };
}

