/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TransactionStatus } from './TransactionStatus';
import {
    TransactionStatusFromJSON,
    TransactionStatusFromJSONTyped,
    TransactionStatusToJSON,
} from './TransactionStatus';

/**
 * 
 * @export
 * @interface TransactionStatusResponseKnownPayloadItem
 */
export interface TransactionStatusResponseKnownPayloadItem {
    /**
     * 
     * @type {string}
     * @memberof TransactionStatusResponseKnownPayloadItem
     */
    payload_hash_hex: string;
    /**
     * 
     * @type {TransactionStatus}
     * @memberof TransactionStatusResponseKnownPayloadItem
     */
    status: TransactionStatus;
    /**
     * 
     * @type {string}
     * @memberof TransactionStatusResponseKnownPayloadItem
     */
    error_message?: string | null;
}

/**
 * Check if a given object implements the TransactionStatusResponseKnownPayloadItem interface.
 */
export function instanceOfTransactionStatusResponseKnownPayloadItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "payload_hash_hex" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function TransactionStatusResponseKnownPayloadItemFromJSON(json: any): TransactionStatusResponseKnownPayloadItem {
    return TransactionStatusResponseKnownPayloadItemFromJSONTyped(json, false);
}

export function TransactionStatusResponseKnownPayloadItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionStatusResponseKnownPayloadItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'payload_hash_hex': json['payload_hash_hex'],
        'status': TransactionStatusFromJSON(json['status']),
        'error_message': !exists(json, 'error_message') ? undefined : json['error_message'],
    };
}

export function TransactionStatusResponseKnownPayloadItemToJSON(value?: TransactionStatusResponseKnownPayloadItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'payload_hash_hex': value.payload_hash_hex,
        'status': TransactionStatusToJSON(value.status),
        'error_message': value.error_message,
    };
}

