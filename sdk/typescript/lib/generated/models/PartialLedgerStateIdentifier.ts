/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Allows a client to request a response referencing an earlier (`at_*` properties) or later (`from_*` properties) ledger state.
 * @export
 * @interface PartialLedgerStateIdentifier
 */
export interface PartialLedgerStateIdentifier {
    /**
     * If the version is provided, the latest ledger state <= the given version is returned.
     * @type {number}
     * @memberof PartialLedgerStateIdentifier
     */
    state_version?: number | null;
    /**
     * If a timestamp is provided, the latest ledger state <= the given timestamp is returned.
     * @type {Date}
     * @memberof PartialLedgerStateIdentifier
     */
    timestamp?: Date | null;
    /**
     * If an epoch is provided, the ledger state at the given epoch <= the given round (else round 0) is returned.
     * @type {number}
     * @memberof PartialLedgerStateIdentifier
     */
    epoch?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PartialLedgerStateIdentifier
     */
    round?: number | null;
}

/**
 * Check if a given object implements the PartialLedgerStateIdentifier interface.
 */
export function instanceOfPartialLedgerStateIdentifier(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PartialLedgerStateIdentifierFromJSON(json: any): PartialLedgerStateIdentifier {
    return PartialLedgerStateIdentifierFromJSONTyped(json, false);
}

export function PartialLedgerStateIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): PartialLedgerStateIdentifier {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'state_version': !exists(json, 'state_version') ? undefined : json['state_version'],
        'timestamp': !exists(json, 'timestamp') ? undefined : (json['timestamp'] === null ? null : new Date(json['timestamp'])),
        'epoch': !exists(json, 'epoch') ? undefined : json['epoch'],
        'round': !exists(json, 'round') ? undefined : json['round'],
    };
}

export function PartialLedgerStateIdentifierToJSON(value?: PartialLedgerStateIdentifier | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'state_version': value.state_version,
        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp === null ? null : value.timestamp.toISOString()),
        'epoch': value.epoch,
        'round': value.round,
    };
}

