/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntityDetailsResponseDetailsType } from './EntityDetailsResponseDetailsType';
import {
    EntityDetailsResponseDetailsTypeFromJSON,
    EntityDetailsResponseDetailsTypeFromJSONTyped,
    EntityDetailsResponseDetailsTypeToJSON,
} from './EntityDetailsResponseDetailsType';

/**
 * 
 * @export
 * @interface EntityDetailsResponseAccountComponentDetails
 */
export interface EntityDetailsResponseAccountComponentDetails {
    /**
     * 
     * @type {EntityDetailsResponseDetailsType}
     * @memberof EntityDetailsResponseAccountComponentDetails
     */
    discriminator: EntityDetailsResponseDetailsType;
}

/**
 * Check if a given object implements the EntityDetailsResponseAccountComponentDetails interface.
 */
export function instanceOfEntityDetailsResponseAccountComponentDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "discriminator" in value;

    return isInstance;
}

export function EntityDetailsResponseAccountComponentDetailsFromJSON(json: any): EntityDetailsResponseAccountComponentDetails {
    return EntityDetailsResponseAccountComponentDetailsFromJSONTyped(json, false);
}

export function EntityDetailsResponseAccountComponentDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityDetailsResponseAccountComponentDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'discriminator': EntityDetailsResponseDetailsTypeFromJSON(json['discriminator']),
    };
}

export function EntityDetailsResponseAccountComponentDetailsToJSON(value?: EntityDetailsResponseAccountComponentDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'discriminator': EntityDetailsResponseDetailsTypeToJSON(value.discriminator),
    };
}

