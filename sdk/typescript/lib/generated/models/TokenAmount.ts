/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenAmount
 */
export interface TokenAmount {
    /**
     * The string-encoded decimal representing the amount
     * @type {string}
     * @memberof TokenAmount
     */
    value: string;
    /**
     * The Bech32m-encoded human readable version of the resource (fungible, non-fungible) global address.
     * @type {string}
     * @memberof TokenAmount
     */
    address?: string;
}

/**
 * Check if a given object implements the TokenAmount interface.
 */
export function instanceOfTokenAmount(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function TokenAmountFromJSON(json: any): TokenAmount {
    return TokenAmountFromJSONTyped(json, false);
}

export function TokenAmountFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenAmount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'value': json['value'],
        'address': !exists(json, 'address') ? undefined : json['address'],
    };
}

export function TokenAmountToJSON(value?: TokenAmount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'value': value.value,
        'address': value.address,
    };
}

