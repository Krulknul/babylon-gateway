/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntityResourcesResponseNonFungibleResourcesItem } from './EntityResourcesResponseNonFungibleResourcesItem';
import {
    EntityResourcesResponseNonFungibleResourcesItemFromJSON,
    EntityResourcesResponseNonFungibleResourcesItemFromJSONTyped,
    EntityResourcesResponseNonFungibleResourcesItemToJSON,
} from './EntityResourcesResponseNonFungibleResourcesItem';

/**
 * 
 * @export
 * @interface EntityResourcesResponseNonFungibleResourcesAllOf
 */
export interface EntityResourcesResponseNonFungibleResourcesAllOf {
    /**
     * 
     * @type {Array<EntityResourcesResponseNonFungibleResourcesItem>}
     * @memberof EntityResourcesResponseNonFungibleResourcesAllOf
     */
    items: Array<EntityResourcesResponseNonFungibleResourcesItem>;
}

/**
 * Check if a given object implements the EntityResourcesResponseNonFungibleResourcesAllOf interface.
 */
export function instanceOfEntityResourcesResponseNonFungibleResourcesAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function EntityResourcesResponseNonFungibleResourcesAllOfFromJSON(json: any): EntityResourcesResponseNonFungibleResourcesAllOf {
    return EntityResourcesResponseNonFungibleResourcesAllOfFromJSONTyped(json, false);
}

export function EntityResourcesResponseNonFungibleResourcesAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityResourcesResponseNonFungibleResourcesAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(EntityResourcesResponseNonFungibleResourcesItemFromJSON)),
    };
}

export function EntityResourcesResponseNonFungibleResourcesAllOfToJSON(value?: EntityResourcesResponseNonFungibleResourcesAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(EntityResourcesResponseNonFungibleResourcesItemToJSON)),
    };
}

