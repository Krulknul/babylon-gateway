/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    EcdsaSecp256k1PublicKey,
    instanceOfEcdsaSecp256k1PublicKey,
    EcdsaSecp256k1PublicKeyFromJSON,
    EcdsaSecp256k1PublicKeyFromJSONTyped,
    EcdsaSecp256k1PublicKeyToJSON,
} from './EcdsaSecp256k1PublicKey';
import {
    EddsaEd25519PublicKey,
    instanceOfEddsaEd25519PublicKey,
    EddsaEd25519PublicKeyFromJSON,
    EddsaEd25519PublicKeyFromJSONTyped,
    EddsaEd25519PublicKeyToJSON,
} from './EddsaEd25519PublicKey';

/**
 * @type PublicKey
 * 
 * @export
 */
export type PublicKey = { key_type: 'EcdsaSecp256k1' } & EcdsaSecp256k1PublicKey | { key_type: 'EddsaEd25519' } & EddsaEd25519PublicKey;

export function PublicKeyFromJSON(json: any): PublicKey {
    return PublicKeyFromJSONTyped(json, false);
}

export function PublicKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicKey {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['key_type']) {
        case 'EcdsaSecp256k1':
            return {...EcdsaSecp256k1PublicKeyFromJSONTyped(json, true), key_type: 'EcdsaSecp256k1'};
        case 'EddsaEd25519':
            return {...EddsaEd25519PublicKeyFromJSONTyped(json, true), key_type: 'EddsaEd25519'};
        default:
            throw new Error(`No variant of PublicKey exists with 'key_type=${json['key_type']}'`);
    }
}

export function PublicKeyToJSON(value?: PublicKey | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['key_type']) {
        case 'EcdsaSecp256k1':
            return EcdsaSecp256k1PublicKeyToJSON(value);
        case 'EddsaEd25519':
            return EddsaEd25519PublicKeyToJSON(value);
        default:
            throw new Error(`No variant of PublicKey exists with 'key_type=${value['key_type']}'`);
    }

}

