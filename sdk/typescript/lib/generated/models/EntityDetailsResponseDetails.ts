/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    EntityDetailsResponseAccountComponentDetails,
    instanceOfEntityDetailsResponseAccountComponentDetails,
    EntityDetailsResponseAccountComponentDetailsFromJSON,
    EntityDetailsResponseAccountComponentDetailsFromJSONTyped,
    EntityDetailsResponseAccountComponentDetailsToJSON,
} from './EntityDetailsResponseAccountComponentDetails';
import {
    EntityDetailsResponseFungibleResourceDetails,
    instanceOfEntityDetailsResponseFungibleResourceDetails,
    EntityDetailsResponseFungibleResourceDetailsFromJSON,
    EntityDetailsResponseFungibleResourceDetailsFromJSONTyped,
    EntityDetailsResponseFungibleResourceDetailsToJSON,
} from './EntityDetailsResponseFungibleResourceDetails';
import {
    EntityDetailsResponseNonFungibleResourceDetails,
    instanceOfEntityDetailsResponseNonFungibleResourceDetails,
    EntityDetailsResponseNonFungibleResourceDetailsFromJSON,
    EntityDetailsResponseNonFungibleResourceDetailsFromJSONTyped,
    EntityDetailsResponseNonFungibleResourceDetailsToJSON,
} from './EntityDetailsResponseNonFungibleResourceDetails';

/**
 * @type EntityDetailsResponseDetails
 * 
 * @export
 */
export type EntityDetailsResponseDetails = { discriminator: 'account_component' } & EntityDetailsResponseAccountComponentDetails | { discriminator: 'fungible_resource' } & EntityDetailsResponseFungibleResourceDetails | { discriminator: 'non_fungible_resource' } & EntityDetailsResponseNonFungibleResourceDetails;

export function EntityDetailsResponseDetailsFromJSON(json: any): EntityDetailsResponseDetails {
    return EntityDetailsResponseDetailsFromJSONTyped(json, false);
}

export function EntityDetailsResponseDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityDetailsResponseDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['discriminator']) {
        case 'account_component':
            return {...EntityDetailsResponseAccountComponentDetailsFromJSONTyped(json, true), discriminator: 'account_component'};
        case 'fungible_resource':
            return {...EntityDetailsResponseFungibleResourceDetailsFromJSONTyped(json, true), discriminator: 'fungible_resource'};
        case 'non_fungible_resource':
            return {...EntityDetailsResponseNonFungibleResourceDetailsFromJSONTyped(json, true), discriminator: 'non_fungible_resource'};
        default:
            throw new Error(`No variant of EntityDetailsResponseDetails exists with 'discriminator=${json['discriminator']}'`);
    }
}

export function EntityDetailsResponseDetailsToJSON(value?: EntityDetailsResponseDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['discriminator']) {
        case 'account_component':
            return EntityDetailsResponseAccountComponentDetailsToJSON(value);
        case 'fungible_resource':
            return EntityDetailsResponseFungibleResourceDetailsToJSON(value);
        case 'non_fungible_resource':
            return EntityDetailsResponseNonFungibleResourceDetailsToJSON(value);
        default:
            throw new Error(`No variant of EntityDetailsResponseDetails exists with 'discriminator=${value['discriminator']}'`);
    }

}

