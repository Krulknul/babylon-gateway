/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * This API is designed to enable clients to efficiently query information on the RadixDLT ledger, and allow clients to build and submit transactions to the network. It is designed for use by wallets and explorers.  This document is an API reference documentation, visit [User Guide](https://docs.radixdlt.com/main/apis/gateway-api.html) to learn more about different usage scenarios.  The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/babylon-gateway), which is configured to read from [full node(s)](https://github.com/radixdlt/babylon-node) to extract and index data from the network. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResultSetCursorMixin
 */
export interface ResultSetCursorMixin {
    /**
     * Total number of items in underlying collection, fragment of which is available in `items` collection.
     * @type {number}
     * @memberof ResultSetCursorMixin
     */
    total_count?: number | null;
    /**
     * If specified, contains a cursor to query previous page of the `items` collection.
     * @type {string}
     * @memberof ResultSetCursorMixin
     */
    previous_cursor?: string | null;
    /**
     * If specified, contains a cursor to query next page of the `items` collection.
     * @type {string}
     * @memberof ResultSetCursorMixin
     */
    next_cursor?: string | null;
}

/**
 * Check if a given object implements the ResultSetCursorMixin interface.
 */
export function instanceOfResultSetCursorMixin(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResultSetCursorMixinFromJSON(json: any): ResultSetCursorMixin {
    return ResultSetCursorMixinFromJSONTyped(json, false);
}

export function ResultSetCursorMixinFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResultSetCursorMixin {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total_count': !exists(json, 'total_count') ? undefined : json['total_count'],
        'previous_cursor': !exists(json, 'previous_cursor') ? undefined : json['previous_cursor'],
        'next_cursor': !exists(json, 'next_cursor') ? undefined : json['next_cursor'],
    };
}

export function ResultSetCursorMixinToJSON(value?: ResultSetCursorMixin | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total_count': value.total_count,
        'previous_cursor': value.previous_cursor,
        'next_cursor': value.next_cursor,
    };
}

