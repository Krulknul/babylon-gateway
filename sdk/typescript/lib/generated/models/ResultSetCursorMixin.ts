/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResultSetCursorMixin
 */
export interface ResultSetCursorMixin {
    /**
     * TBD (make it nullable when we're dealing with unknown result set sizes?)
     * @type {number}
     * @memberof ResultSetCursorMixin
     */
    total_count: number;
    /**
     * TBD (maybe we should use HATEOAS-like permalinks?)
     * @type {string}
     * @memberof ResultSetCursorMixin
     */
    previous_cursor?: string | null;
    /**
     * TBD (maybe we should use HATEOAS-like permalinks?)
     * @type {string}
     * @memberof ResultSetCursorMixin
     */
    next_cursor?: string | null;
}

/**
 * Check if a given object implements the ResultSetCursorMixin interface.
 */
export function instanceOfResultSetCursorMixin(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "total_count" in value;

    return isInstance;
}

export function ResultSetCursorMixinFromJSON(json: any): ResultSetCursorMixin {
    return ResultSetCursorMixinFromJSONTyped(json, false);
}

export function ResultSetCursorMixinFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResultSetCursorMixin {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total_count': json['total_count'],
        'previous_cursor': !exists(json, 'previous_cursor') ? undefined : json['previous_cursor'],
        'next_cursor': !exists(json, 'next_cursor') ? undefined : json['next_cursor'],
    };
}

export function ResultSetCursorMixinToJSON(value?: ResultSetCursorMixin | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total_count': value.total_count,
        'previous_cursor': value.previous_cursor,
        'next_cursor': value.next_cursor,
    };
}

