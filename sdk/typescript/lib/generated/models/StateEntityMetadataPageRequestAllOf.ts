/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * This API is designed to enable clients to efficiently query information on the RadixDLT ledger, and allow clients to build and submit transactions to the network. It is designed for use by wallets and explorers.  This document is an API reference documentation, visit [User Guide](https://docs.radixdlt.com/main/apis/gateway-api.html) to learn more about different usage scenarios.  The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/babylon-gateway), which is configured to read from [full node(s)](https://github.com/radixdlt/babylon-node) to extract and index data from the network. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StateEntityMetadataPageRequestAllOf
 */
export interface StateEntityMetadataPageRequestAllOf {
    /**
     * Bech32m-encoded human readable version of the entity's global address or hex-encoded id.
     * @type {string}
     * @memberof StateEntityMetadataPageRequestAllOf
     */
    address: string;
}

/**
 * Check if a given object implements the StateEntityMetadataPageRequestAllOf interface.
 */
export function instanceOfStateEntityMetadataPageRequestAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "address" in value;

    return isInstance;
}

export function StateEntityMetadataPageRequestAllOfFromJSON(json: any): StateEntityMetadataPageRequestAllOf {
    return StateEntityMetadataPageRequestAllOfFromJSONTyped(json, false);
}

export function StateEntityMetadataPageRequestAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): StateEntityMetadataPageRequestAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': json['address'],
    };
}

export function StateEntityMetadataPageRequestAllOfToJSON(value?: StateEntityMetadataPageRequestAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
    };
}

