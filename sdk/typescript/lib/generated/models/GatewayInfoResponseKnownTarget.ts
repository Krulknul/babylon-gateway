/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GatewayInfoResponseKnownTarget
 */
export interface GatewayInfoResponseKnownTarget {
    /**
     * The latest-seen state version of the tip of the network's ledger. If this is significantly ahead of the current LedgerState version, the Network Gateway is possibly behind and may be reporting outdated information.
     * @type {number}
     * @memberof GatewayInfoResponseKnownTarget
     */
    state_version: number;
}

/**
 * Check if a given object implements the GatewayInfoResponseKnownTarget interface.
 */
export function instanceOfGatewayInfoResponseKnownTarget(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "state_version" in value;

    return isInstance;
}

export function GatewayInfoResponseKnownTargetFromJSON(json: any): GatewayInfoResponseKnownTarget {
    return GatewayInfoResponseKnownTargetFromJSONTyped(json, false);
}

export function GatewayInfoResponseKnownTargetFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayInfoResponseKnownTarget {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'state_version': json['state_version'],
    };
}

export function GatewayInfoResponseKnownTargetToJSON(value?: GatewayInfoResponseKnownTarget | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'state_version': value.state_version,
    };
}

