/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * This API is designed to enable clients to efficiently query information on the RadixDLT ledger, and allow clients to build and submit transactions to the network. It is designed for use by wallets and explorers.  This document is an API reference documentation, visit [User Guide](https://docs.radixdlt.com/main/apis/gateway-api.html) to learn more about different usage scenarios.  The Gateway API is implemented by the [Network Gateway](https://github.com/radixdlt/babylon-gateway), which is configured to read from [full node(s)](https://github.com/radixdlt/babylon-node) to extract and index data from the network. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntityDetailsResponseDetailsType } from './EntityDetailsResponseDetailsType';
import {
    EntityDetailsResponseDetailsTypeFromJSON,
    EntityDetailsResponseDetailsTypeFromJSONTyped,
    EntityDetailsResponseDetailsTypeToJSON,
} from './EntityDetailsResponseDetailsType';

/**
 * 
 * @export
 * @interface EntityDetailsResponseFungibleResourceDetails
 */
export interface EntityDetailsResponseFungibleResourceDetails {
    /**
     * 
     * @type {EntityDetailsResponseDetailsType}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    discriminator: EntityDetailsResponseDetailsType;
    /**
     * 
     * @type {object}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    access_rules_chain: object;
    /**
     * 
     * @type {object}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    vault_access_rules_chain: object;
    /**
     * 
     * @type {number}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    divisibility: number;
    /**
     * String-encoded decimal representing the amount of a related fungible resource.
     * @type {string}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    total_supply: string;
    /**
     * String-encoded decimal representing the amount of a related fungible resource.
     * @type {string}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    total_minted: string;
    /**
     * String-encoded decimal representing the amount of a related fungible resource.
     * @type {string}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    total_burnt: string;
}

/**
 * Check if a given object implements the EntityDetailsResponseFungibleResourceDetails interface.
 */
export function instanceOfEntityDetailsResponseFungibleResourceDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "discriminator" in value;
    isInstance = isInstance && "access_rules_chain" in value;
    isInstance = isInstance && "vault_access_rules_chain" in value;
    isInstance = isInstance && "divisibility" in value;
    isInstance = isInstance && "total_supply" in value;
    isInstance = isInstance && "total_minted" in value;
    isInstance = isInstance && "total_burnt" in value;

    return isInstance;
}

export function EntityDetailsResponseFungibleResourceDetailsFromJSON(json: any): EntityDetailsResponseFungibleResourceDetails {
    return EntityDetailsResponseFungibleResourceDetailsFromJSONTyped(json, false);
}

export function EntityDetailsResponseFungibleResourceDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityDetailsResponseFungibleResourceDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'discriminator': EntityDetailsResponseDetailsTypeFromJSON(json['discriminator']),
        'access_rules_chain': json['access_rules_chain'],
        'vault_access_rules_chain': json['vault_access_rules_chain'],
        'divisibility': json['divisibility'],
        'total_supply': json['total_supply'],
        'total_minted': json['total_minted'],
        'total_burnt': json['total_burnt'],
    };
}

export function EntityDetailsResponseFungibleResourceDetailsToJSON(value?: EntityDetailsResponseFungibleResourceDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'discriminator': EntityDetailsResponseDetailsTypeToJSON(value.discriminator),
        'access_rules_chain': value.access_rules_chain,
        'vault_access_rules_chain': value.vault_access_rules_chain,
        'divisibility': value.divisibility,
        'total_supply': value.total_supply,
        'total_minted': value.total_minted,
        'total_burnt': value.total_burnt,
    };
}

