/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntityDetailsResponseDetailsType } from './EntityDetailsResponseDetailsType';
import {
    EntityDetailsResponseDetailsTypeFromJSON,
    EntityDetailsResponseDetailsTypeFromJSONTyped,
    EntityDetailsResponseDetailsTypeToJSON,
} from './EntityDetailsResponseDetailsType';
import type { TokenAmount } from './TokenAmount';
import {
    TokenAmountFromJSON,
    TokenAmountFromJSONTyped,
    TokenAmountToJSON,
} from './TokenAmount';

/**
 * 
 * @export
 * @interface EntityDetailsResponseFungibleResourceDetails
 */
export interface EntityDetailsResponseFungibleResourceDetails {
    /**
     * 
     * @type {EntityDetailsResponseDetailsType}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    discriminator: EntityDetailsResponseDetailsType;
    /**
     * 
     * @type {object}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    auth_rules: object;
    /**
     * 
     * @type {number}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    divisibility: number;
    /**
     * 
     * @type {TokenAmount}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    total_supply: TokenAmount;
    /**
     * 
     * @type {TokenAmount}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    total_minted: TokenAmount;
    /**
     * 
     * @type {TokenAmount}
     * @memberof EntityDetailsResponseFungibleResourceDetails
     */
    total_burnt: TokenAmount;
}

/**
 * Check if a given object implements the EntityDetailsResponseFungibleResourceDetails interface.
 */
export function instanceOfEntityDetailsResponseFungibleResourceDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "discriminator" in value;
    isInstance = isInstance && "auth_rules" in value;
    isInstance = isInstance && "divisibility" in value;
    isInstance = isInstance && "total_supply" in value;
    isInstance = isInstance && "total_minted" in value;
    isInstance = isInstance && "total_burnt" in value;

    return isInstance;
}

export function EntityDetailsResponseFungibleResourceDetailsFromJSON(json: any): EntityDetailsResponseFungibleResourceDetails {
    return EntityDetailsResponseFungibleResourceDetailsFromJSONTyped(json, false);
}

export function EntityDetailsResponseFungibleResourceDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityDetailsResponseFungibleResourceDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'discriminator': EntityDetailsResponseDetailsTypeFromJSON(json['discriminator']),
        'auth_rules': json['auth_rules'],
        'divisibility': json['divisibility'],
        'total_supply': TokenAmountFromJSON(json['total_supply']),
        'total_minted': TokenAmountFromJSON(json['total_minted']),
        'total_burnt': TokenAmountFromJSON(json['total_burnt']),
    };
}

export function EntityDetailsResponseFungibleResourceDetailsToJSON(value?: EntityDetailsResponseFungibleResourceDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'discriminator': EntityDetailsResponseDetailsTypeToJSON(value.discriminator),
        'auth_rules': value.auth_rules,
        'divisibility': value.divisibility,
        'total_supply': TokenAmountToJSON(value.total_supply),
        'total_minted': TokenAmountToJSON(value.total_minted),
        'total_burnt': TokenAmountToJSON(value.total_burnt),
    };
}

