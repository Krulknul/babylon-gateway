/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EntityMetadataItem
 */
export interface EntityMetadataItem {
    /**
     * 
     * @type {string}
     * @memberof EntityMetadataItem
     */
    key: string;
    /**
     * 
     * @type {string}
     * @memberof EntityMetadataItem
     */
    value: string;
}

/**
 * Check if a given object implements the EntityMetadataItem interface.
 */
export function instanceOfEntityMetadataItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "key" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function EntityMetadataItemFromJSON(json: any): EntityMetadataItem {
    return EntityMetadataItemFromJSONTyped(json, false);
}

export function EntityMetadataItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityMetadataItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'key': json['key'],
        'value': json['value'],
    };
}

export function EntityMetadataItemToJSON(value?: EntityMetadataItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key': value.key,
        'value': value.value,
    };
}

