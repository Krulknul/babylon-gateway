/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GatewayError } from './GatewayError';
import {
    GatewayErrorFromJSON,
    GatewayErrorFromJSONTyped,
    GatewayErrorToJSON,
} from './GatewayError';

/**
 * 
 * @export
 * @interface InvalidEntityError
 */
export interface InvalidEntityError extends GatewayError {
    /**
     * The Bech32m-encoded human readable version of the entity's global address.
     * @type {string}
     * @memberof InvalidEntityError
     */
    address: string;
}

/**
 * Check if a given object implements the InvalidEntityError interface.
 */
export function instanceOfInvalidEntityError(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "address" in value;

    return isInstance;
}

export function InvalidEntityErrorFromJSON(json: any): InvalidEntityError {
    return InvalidEntityErrorFromJSONTyped(json, false);
}

export function InvalidEntityErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvalidEntityError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...GatewayErrorFromJSONTyped(json, ignoreDiscriminator),
        'address': json['address'],
    };
}

export function InvalidEntityErrorToJSON(value?: InvalidEntityError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...GatewayErrorToJSON(value),
        'address': value.address,
    };
}

