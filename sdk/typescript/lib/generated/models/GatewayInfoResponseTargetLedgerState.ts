/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GatewayInfoResponseTargetLedgerState
 */
export interface GatewayInfoResponseTargetLedgerState {
    /**
     * The latest-seen state version of the tip of the network's ledger. If this is significantly ahead of the current LedgerState version, the Network Gateway is possibly behind and may be reporting outdated information.
     * @type {number}
     * @memberof GatewayInfoResponseTargetLedgerState
     */
    version: number;
}

/**
 * Check if a given object implements the GatewayInfoResponseTargetLedgerState interface.
 */
export function instanceOfGatewayInfoResponseTargetLedgerState(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;

    return isInstance;
}

export function GatewayInfoResponseTargetLedgerStateFromJSON(json: any): GatewayInfoResponseTargetLedgerState {
    return GatewayInfoResponseTargetLedgerStateFromJSONTyped(json, false);
}

export function GatewayInfoResponseTargetLedgerStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayInfoResponseTargetLedgerState {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': json['version'],
    };
}

export function GatewayInfoResponseTargetLedgerStateToJSON(value?: GatewayInfoResponseTargetLedgerState | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
    };
}

