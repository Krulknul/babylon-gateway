/* tslint:disable */
/* eslint-disable */
/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NonFungibleResourcesCollection } from './NonFungibleResourcesCollection';
import {
    NonFungibleResourcesCollectionFromJSON,
    NonFungibleResourcesCollectionFromJSONTyped,
    NonFungibleResourcesCollectionToJSON,
} from './NonFungibleResourcesCollection';

/**
 * 
 * @export
 * @interface EntityNonFungiblesResponseAllOf
 */
export interface EntityNonFungiblesResponseAllOf {
    /**
     * The Bech32m-encoded human readable version of the entity's global address.
     * @type {string}
     * @memberof EntityNonFungiblesResponseAllOf
     */
    address: string;
    /**
     * 
     * @type {NonFungibleResourcesCollection}
     * @memberof EntityNonFungiblesResponseAllOf
     */
    non_fungibles: NonFungibleResourcesCollection;
}

/**
 * Check if a given object implements the EntityNonFungiblesResponseAllOf interface.
 */
export function instanceOfEntityNonFungiblesResponseAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "non_fungibles" in value;

    return isInstance;
}

export function EntityNonFungiblesResponseAllOfFromJSON(json: any): EntityNonFungiblesResponseAllOf {
    return EntityNonFungiblesResponseAllOfFromJSONTyped(json, false);
}

export function EntityNonFungiblesResponseAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityNonFungiblesResponseAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': json['address'],
        'non_fungibles': NonFungibleResourcesCollectionFromJSON(json['non_fungibles']),
    };
}

export function EntityNonFungiblesResponseAllOfToJSON(value?: EntityNonFungiblesResponseAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'non_fungibles': NonFungibleResourcesCollectionToJSON(value.non_fungibles),
    };
}

