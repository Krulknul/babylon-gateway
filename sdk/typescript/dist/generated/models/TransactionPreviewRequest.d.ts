/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { PublicKey } from './PublicKey';
import type { TransactionPreviewRequestFlags } from './TransactionPreviewRequestFlags';
/**
 *
 * @export
 * @interface TransactionPreviewRequest
 */
export interface TransactionPreviewRequest {
    /**
     * A transaction manifest. sbor encoded, and then hex encoded.
     * @type {string}
     * @memberof TransactionPreviewRequest
     */
    manifest: string;
    /**
     * An array of hex-encoded blob data (optional)
     * @type {Array<string>}
     * @memberof TransactionPreviewRequest
     */
    blobs_hex?: Array<string>;
    /**
     * An integer between 0 and 2^32 - 1, giving the maximum number of cost units available for transaction execution
     * @type {number}
     * @memberof TransactionPreviewRequest
     */
    cost_unit_limit: number;
    /**
     * An integer between 0 and 2^32 - 1, specifying the validator tip as a percentage amount. A value of "1" corresponds to 1% of the fee.
     * @type {number}
     * @memberof TransactionPreviewRequest
     */
    tip_percentage: number;
    /**
     * A decimal-string-encoded integer between 0 and 2^64-1, used to ensure the transaction intent is unique.
     * @type {string}
     * @memberof TransactionPreviewRequest
     */
    nonce: string;
    /**
     * A list of public keys to be used as transaction signers
     * @type {Array<PublicKey>}
     * @memberof TransactionPreviewRequest
     */
    signer_public_keys: Array<PublicKey>;
    /**
     *
     * @type {TransactionPreviewRequestFlags}
     * @memberof TransactionPreviewRequest
     */
    flags: TransactionPreviewRequestFlags;
}
/**
 * Check if a given object implements the TransactionPreviewRequest interface.
 */
export declare function instanceOfTransactionPreviewRequest(value: object): boolean;
export declare function TransactionPreviewRequestFromJSON(json: any): TransactionPreviewRequest;
export declare function TransactionPreviewRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionPreviewRequest;
export declare function TransactionPreviewRequestToJSON(value?: TransactionPreviewRequest | null): any;
