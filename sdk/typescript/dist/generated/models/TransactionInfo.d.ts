/**
 * Radix Babylon Gateway API
 * See https://docs.radixdlt.com/main/apis/introduction.html
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { TokenAmount } from './TokenAmount';
import type { TransactionStatus } from './TransactionStatus';
/**
 *
 * @export
 * @interface TransactionInfo
 */
export interface TransactionInfo {
    /**
     *
     * @type {TransactionStatus}
     * @memberof TransactionInfo
     */
    transaction_status: TransactionStatus;
    /**
     *
     * @type {string}
     * @memberof TransactionInfo
     */
    payload_hash_hex: string;
    /**
     *
     * @type {string}
     * @memberof TransactionInfo
     */
    intent_hash_hex: string;
    /**
     *
     * @type {string}
     * @memberof TransactionInfo
     */
    transaction_accumulator_hex: string;
    /**
     *
     * @type {TokenAmount}
     * @memberof TransactionInfo
     */
    fee_paid: TokenAmount;
}
/**
 * Check if a given object implements the TransactionInfo interface.
 */
export declare function instanceOfTransactionInfo(value: object): boolean;
export declare function TransactionInfoFromJSON(json: any): TransactionInfo;
export declare function TransactionInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionInfo;
export declare function TransactionInfoToJSON(value?: TransactionInfo | null): any;
