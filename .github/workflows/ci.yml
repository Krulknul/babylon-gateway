name: dotnet package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x']
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.8.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          include-prerelease: true
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
  publish-docker:
    runs-on: ubuntu-latest
    outputs:  
      docker-tag: ${{ steps.setup_tags.outputs.docker-tag}}
    steps:
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/checkout@v2
        if: github.event_name == 'push' || github.event_name == 'release'
        with:
          fetch-depth: 0
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_EU_DEV_JSON_KEY }}
      - name: Setup Tags for docker image
        id: setup_tags
        run: |
            docker_tag_with_branch(){
               GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD | sed 's/\//-/g')
               GIT_COMMIT=$(git log -1 --format=%h )
               DOCKER_TAG=${GIT_BRANCH}-${GIT_COMMIT}
            }

            GH_EVENT_NAME="${{ github.event_name }}"
            GH_ACTION_NAME="${{ github.event.action}}"
            DOCKER_REPO="eu.gcr.io/dev-container-repo/ng-data-aggregator"

            case "${GH_EVENT_NAME}" in
                release)
                    TAGS="${DOCKER_REPO}:${{ github.event.release.tag_name }}"
                ;;
                pull_request | push)
                    docker_tag_with_branch
                    TAGS="${DOCKER_REPO}:${DOCKER_TAG}"
                ;;
                *)
                    echo "${GH_EVENT_NAME} not implemented yet"
                    exit 1
                ;;
            esac

            echo "$TAGS"
            echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
            echo "TAGS=$TAGS" >> $GITHUB_ENV
            echo "::set-output name=docker-tag::$DOCKER_TAG"
             
      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          file: ./src/DataAggregator/Dockerfile
          tags: |
            ${{ env.TAGS }}
          push: true
          context: ./
    
  dispatch-deployment-events:
    runs-on: ubuntu-latest
    environment: event_creation
    needs: publish-docker
    steps:
      - name: Trigger pull request deployment event ${{ github.ref }} 
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.RADIXBOT_GITHUB_REPO_PACKAGES_TOKEN }}
          repository: radixdlt/radixdlt-iac
          event-type: ng_pr
          client-payload: |
            {
              "data_aggregator_image_tag": "${{ needs.publish-docker.outputs.docker-tag }} "
              "namespace_postfix": "${{ env.DOCKER_TAG }}"
              "job_url": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
            }
        if: github.event_name == 'pull_request'



